2025-04-03 18:03:21 [restartedMain] INFO  com.app.Application - Starting Application using Java 23.0.1 on ATMECSINLT-1581 with PID 33252 (C:\Users\pranav.chaudhari\Downloads\New folder\Zip\BACK\Hotel-Management-Using-Spring-boot-REST\spring_boot_backend_job\target\classes started by Pranav.Chaudhari in C:\Users\pranav.chaudhari\Downloads\New folder\Zip\BACK\Hotel-Management-Using-Spring-boot-REST\spring_boot_backend_job)
2025-04-03 18:03:21 [restartedMain] INFO  com.app.Application - No active profile set, falling back to 1 default profile: "default"
2025-04-03 18:03:21 [restartedMain] INFO  org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-04-03 18:03:21 [restartedMain] INFO  org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-04-03 18:03:22 [restartedMain] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-04-03 18:03:22 [restartedMain] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-04-03 18:03:22 [restartedMain] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 166 ms. Found 6 JPA repository interfaces.
2025-04-03 18:03:22 [restartedMain] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-04-03 18:03:22 [restartedMain] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-04-03 18:03:22 [restartedMain] INFO  org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.app.dao.BookingRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-04-03 18:03:22 [restartedMain] INFO  org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.app.dao.HotelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-04-03 18:03:22 [restartedMain] INFO  org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.app.dao.PaymentRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-04-03 18:03:22 [restartedMain] INFO  org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.app.dao.ReservationRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-04-03 18:03:22 [restartedMain] INFO  org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.app.dao.RoomRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-04-03 18:03:22 [restartedMain] INFO  org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.app.dao.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-04-03 18:03:22 [restartedMain] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 16 ms. Found 0 Redis repository interfaces.
2025-04-03 18:03:23 [restartedMain] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8081 (http)
2025-04-03 18:03:23 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-04-03 18:03:23 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.83]
2025-04-03 18:03:23 [restartedMain] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-04-03 18:03:23 [restartedMain] INFO  org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2520 ms
2025-04-03 18:03:24 [restartedMain] INFO  org.hibernate.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-04-03 18:03:24 [restartedMain] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 5.6.15.Final
2025-04-03 18:03:24 [restartedMain] INFO  org.hibernate.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2025-04-03 18:03:24 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-04-03 18:03:25 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-04-03 18:03:25 [restartedMain] INFO  org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
2025-04-03 18:03:27 [restartedMain] INFO  org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2025-04-03 18:03:27 [restartedMain] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-04-03 18:03:30 [restartedMain] INFO  org.springframework.security.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@72ab570e, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@7d3c4627, org.springframework.security.web.context.SecurityContextPersistenceFilter@60ab039a, org.springframework.security.web.header.HeaderWriterFilter@4615e01f, org.springframework.security.web.authentication.logout.LogoutFilter@2d08309a, org.springframework.security.oauth2.client.web.OAuth2AuthorizationRequestRedirectFilter@4f194a7e, org.springframework.security.oauth2.client.web.OAuth2LoginAuthenticationFilter@710c18b3, com.app.Util.JwtRequestFilter@7b604c5e, org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter@1da5de08, org.springframework.security.web.authentication.ui.DefaultLogoutPageGeneratingFilter@8299832, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@7f328366, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@4d659a2b, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@2e4a925c, org.springframework.security.web.session.SessionManagementFilter@253a54c8, org.springframework.security.web.access.ExceptionTranslationFilter@35711a28, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@6ba4791e]
2025-04-03 18:03:30 [restartedMain] INFO  org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-04-03 18:03:30 [restartedMain] INFO  org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver - Exposing 3 endpoint(s) beneath base path '/actuator'
2025-04-03 18:03:30 [restartedMain] INFO  org.apache.kafka.clients.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-your-consumer-group-id-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = your-consumer-group-id
	group.instance.id = null
	heartbeat.interval.ms = 5000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 15000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2025-04-03 18:03:30 [restartedMain] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka version: 3.1.2
2025-04-03 18:03:30 [restartedMain] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka commitId: f8c67dc3ae0a3265
2025-04-03 18:03:30 [restartedMain] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1743683610689
2025-04-03 18:03:30 [restartedMain] INFO  org.apache.kafka.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-your-consumer-group-id-1, groupId=your-consumer-group-id] Subscribed to topic(s): reservation-email-topic
2025-04-03 18:03:30 [restartedMain] INFO  org.apache.kafka.clients.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-your-consumer-group-id-2
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = your-consumer-group-id
	group.instance.id = null
	heartbeat.interval.ms = 5000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 15000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2025-04-03 18:03:30 [restartedMain] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka version: 3.1.2
2025-04-03 18:03:30 [restartedMain] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka commitId: f8c67dc3ae0a3265
2025-04-03 18:03:30 [restartedMain] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1743683610720
2025-04-03 18:03:30 [restartedMain] INFO  org.apache.kafka.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-your-consumer-group-id-2, groupId=your-consumer-group-id] Subscribed to topic(s): reservation-cancellation-topic
2025-04-03 18:03:30 [restartedMain] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8081 (http) with context path ''
2025-04-03 18:03:31 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-your-consumer-group-id-1, groupId=your-consumer-group-id] Resetting the last seen epoch of partition reservation-email-topic-0 to 0 since the associated topicId changed from null to MAfQ73XXQOWV54FNwfBbwQ
2025-04-03 18:03:31 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-your-consumer-group-id-2, groupId=your-consumer-group-id] Resetting the last seen epoch of partition reservation-cancellation-topic-0 to 0 since the associated topicId changed from null to NjxvK78KSQygux3z6DKsvg
2025-04-03 18:03:31 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-your-consumer-group-id-1, groupId=your-consumer-group-id] Resetting the last seen epoch of partition reservation-email-topic-1 to 0 since the associated topicId changed from null to MAfQ73XXQOWV54FNwfBbwQ
2025-04-03 18:03:31 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-your-consumer-group-id-2, groupId=your-consumer-group-id] Resetting the last seen epoch of partition reservation-cancellation-topic-1 to 0 since the associated topicId changed from null to NjxvK78KSQygux3z6DKsvg
2025-04-03 18:03:31 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-your-consumer-group-id-1, groupId=your-consumer-group-id] Resetting the last seen epoch of partition reservation-email-topic-4 to 0 since the associated topicId changed from null to MAfQ73XXQOWV54FNwfBbwQ
2025-04-03 18:03:31 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-your-consumer-group-id-2, groupId=your-consumer-group-id] Resetting the last seen epoch of partition reservation-cancellation-topic-4 to 0 since the associated topicId changed from null to NjxvK78KSQygux3z6DKsvg
2025-04-03 18:03:31 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-your-consumer-group-id-1, groupId=your-consumer-group-id] Resetting the last seen epoch of partition reservation-email-topic-2 to 0 since the associated topicId changed from null to MAfQ73XXQOWV54FNwfBbwQ
2025-04-03 18:03:31 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-your-consumer-group-id-2, groupId=your-consumer-group-id] Resetting the last seen epoch of partition reservation-cancellation-topic-2 to 0 since the associated topicId changed from null to NjxvK78KSQygux3z6DKsvg
2025-04-03 18:03:31 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-your-consumer-group-id-1, groupId=your-consumer-group-id] Resetting the last seen epoch of partition reservation-email-topic-3 to 0 since the associated topicId changed from null to MAfQ73XXQOWV54FNwfBbwQ
2025-04-03 18:03:31 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-your-consumer-group-id-2, groupId=your-consumer-group-id] Resetting the last seen epoch of partition reservation-cancellation-topic-3 to 0 since the associated topicId changed from null to NjxvK78KSQygux3z6DKsvg
2025-04-03 18:03:31 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-your-consumer-group-id-1, groupId=your-consumer-group-id] Cluster ID: S5CMbeyDTeq1D5ZSu_zjcw
2025-04-03 18:03:31 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-your-consumer-group-id-2, groupId=your-consumer-group-id] Cluster ID: S5CMbeyDTeq1D5ZSu_zjcw
2025-04-03 18:03:31 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-1, groupId=your-consumer-group-id] Discovered group coordinator ATMECSINLT-1581.ATMECS.CORP:9092 (id: 2147483647 rack: null)
2025-04-03 18:03:31 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-2, groupId=your-consumer-group-id] Discovered group coordinator ATMECSINLT-1581.ATMECS.CORP:9092 (id: 2147483647 rack: null)
2025-04-03 18:03:31 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-1, groupId=your-consumer-group-id] (Re-)joining group
2025-04-03 18:03:31 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-2, groupId=your-consumer-group-id] (Re-)joining group
2025-04-03 18:03:31 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-2, groupId=your-consumer-group-id] Request joining group due to: need to re-join with the given member-id
2025-04-03 18:03:31 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-1, groupId=your-consumer-group-id] Request joining group due to: need to re-join with the given member-id
2025-04-03 18:03:31 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-2, groupId=your-consumer-group-id] (Re-)joining group
2025-04-03 18:03:31 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-1, groupId=your-consumer-group-id] (Re-)joining group
2025-04-03 18:03:31 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-1, groupId=your-consumer-group-id] Successfully joined group with generation Generation{generationId=109, memberId='consumer-your-consumer-group-id-1-bd734c25-6dbb-424a-a01b-bf1f223f87ed', protocol='range'}
2025-04-03 18:03:31 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-2, groupId=your-consumer-group-id] Successfully joined group with generation Generation{generationId=109, memberId='consumer-your-consumer-group-id-2-6f59ebf4-ec05-4863-832b-dc1c29991ee5', protocol='range'}
2025-04-03 18:03:31 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-your-consumer-group-id-2, groupId=your-consumer-group-id] Resetting the last seen epoch of partition reservation-email-topic-0 to 0 since the associated topicId changed from null to MAfQ73XXQOWV54FNwfBbwQ
2025-04-03 18:03:31 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-your-consumer-group-id-2, groupId=your-consumer-group-id] Resetting the last seen epoch of partition reservation-email-topic-1 to 0 since the associated topicId changed from null to MAfQ73XXQOWV54FNwfBbwQ
2025-04-03 18:03:31 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-your-consumer-group-id-2, groupId=your-consumer-group-id] Resetting the last seen epoch of partition reservation-email-topic-4 to 0 since the associated topicId changed from null to MAfQ73XXQOWV54FNwfBbwQ
2025-04-03 18:03:31 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-your-consumer-group-id-2, groupId=your-consumer-group-id] Resetting the last seen epoch of partition reservation-email-topic-2 to 0 since the associated topicId changed from null to MAfQ73XXQOWV54FNwfBbwQ
2025-04-03 18:03:31 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-your-consumer-group-id-2, groupId=your-consumer-group-id] Resetting the last seen epoch of partition reservation-email-topic-3 to 0 since the associated topicId changed from null to MAfQ73XXQOWV54FNwfBbwQ
2025-04-03 18:03:31 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-2, groupId=your-consumer-group-id] Finished assignment for group at generation 109: {consumer-your-consumer-group-id-1-bd734c25-6dbb-424a-a01b-bf1f223f87ed=Assignment(partitions=[reservation-email-topic-0, reservation-email-topic-1, reservation-email-topic-2, reservation-email-topic-3, reservation-email-topic-4]), consumer-your-consumer-group-id-2-6f59ebf4-ec05-4863-832b-dc1c29991ee5=Assignment(partitions=[reservation-cancellation-topic-0, reservation-cancellation-topic-1, reservation-cancellation-topic-2, reservation-cancellation-topic-3, reservation-cancellation-topic-4])}
2025-04-03 18:03:31 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-2, groupId=your-consumer-group-id] Successfully synced group in generation Generation{generationId=109, memberId='consumer-your-consumer-group-id-2-6f59ebf4-ec05-4863-832b-dc1c29991ee5', protocol='range'}
2025-04-03 18:03:31 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-1, groupId=your-consumer-group-id] Successfully synced group in generation Generation{generationId=109, memberId='consumer-your-consumer-group-id-1-bd734c25-6dbb-424a-a01b-bf1f223f87ed', protocol='range'}
2025-04-03 18:03:31 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-2, groupId=your-consumer-group-id] Notifying assignor about the new Assignment(partitions=[reservation-cancellation-topic-0, reservation-cancellation-topic-1, reservation-cancellation-topic-2, reservation-cancellation-topic-3, reservation-cancellation-topic-4])
2025-04-03 18:03:31 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-1, groupId=your-consumer-group-id] Notifying assignor about the new Assignment(partitions=[reservation-email-topic-0, reservation-email-topic-1, reservation-email-topic-2, reservation-email-topic-3, reservation-email-topic-4])
2025-04-03 18:03:31 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-1, groupId=your-consumer-group-id] Adding newly assigned partitions: reservation-email-topic-0, reservation-email-topic-1, reservation-email-topic-2, reservation-email-topic-3, reservation-email-topic-4
2025-04-03 18:03:31 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-2, groupId=your-consumer-group-id] Adding newly assigned partitions: reservation-cancellation-topic-4, reservation-cancellation-topic-2, reservation-cancellation-topic-3, reservation-cancellation-topic-0, reservation-cancellation-topic-1
2025-04-03 18:03:31 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-1, groupId=your-consumer-group-id] Setting offset for partition reservation-email-topic-0 to the committed offset FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[ATMECSINLT-1581.ATMECS.CORP:9092 (id: 0 rack: null)], epoch=0}}
2025-04-03 18:03:31 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-2, groupId=your-consumer-group-id] Setting offset for partition reservation-cancellation-topic-4 to the committed offset FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[ATMECSINLT-1581.ATMECS.CORP:9092 (id: 0 rack: null)], epoch=0}}
2025-04-03 18:03:31 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-1, groupId=your-consumer-group-id] Setting offset for partition reservation-email-topic-1 to the committed offset FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[ATMECSINLT-1581.ATMECS.CORP:9092 (id: 0 rack: null)], epoch=0}}
2025-04-03 18:03:31 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-2, groupId=your-consumer-group-id] Setting offset for partition reservation-cancellation-topic-2 to the committed offset FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[ATMECSINLT-1581.ATMECS.CORP:9092 (id: 0 rack: null)], epoch=0}}
2025-04-03 18:03:31 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-1, groupId=your-consumer-group-id] Setting offset for partition reservation-email-topic-2 to the committed offset FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[ATMECSINLT-1581.ATMECS.CORP:9092 (id: 0 rack: null)], epoch=0}}
2025-04-03 18:03:31 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-2, groupId=your-consumer-group-id] Setting offset for partition reservation-cancellation-topic-3 to the committed offset FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[ATMECSINLT-1581.ATMECS.CORP:9092 (id: 0 rack: null)], epoch=0}}
2025-04-03 18:03:31 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-1, groupId=your-consumer-group-id] Setting offset for partition reservation-email-topic-3 to the committed offset FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[ATMECSINLT-1581.ATMECS.CORP:9092 (id: 0 rack: null)], epoch=0}}
2025-04-03 18:03:31 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-1, groupId=your-consumer-group-id] Setting offset for partition reservation-email-topic-4 to the committed offset FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[ATMECSINLT-1581.ATMECS.CORP:9092 (id: 0 rack: null)], epoch=0}}
2025-04-03 18:03:31 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-2, groupId=your-consumer-group-id] Setting offset for partition reservation-cancellation-topic-0 to the committed offset FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[ATMECSINLT-1581.ATMECS.CORP:9092 (id: 0 rack: null)], epoch=0}}
2025-04-03 18:03:31 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-2, groupId=your-consumer-group-id] Setting offset for partition reservation-cancellation-topic-1 to the committed offset FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[ATMECSINLT-1581.ATMECS.CORP:9092 (id: 0 rack: null)], epoch=0}}
2025-04-03 18:03:31 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.springframework.kafka.listener.KafkaMessageListenerContainer - your-consumer-group-id: partitions assigned: [reservation-email-topic-0, reservation-email-topic-1, reservation-email-topic-2, reservation-email-topic-3, reservation-email-topic-4]
2025-04-03 18:03:31 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.springframework.kafka.listener.KafkaMessageListenerContainer - your-consumer-group-id: partitions assigned: [reservation-cancellation-topic-4, reservation-cancellation-topic-2, reservation-cancellation-topic-3, reservation-cancellation-topic-0, reservation-cancellation-topic-1]
2025-04-03 18:03:31 [restartedMain] INFO  com.app.Application - Started Application in 10.951 seconds (JVM running for 12.068)
2025-04-03 18:03:35 [http-nio-8081-exec-1] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-04-03 18:03:35 [http-nio-8081-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-04-03 18:03:35 [http-nio-8081-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 2 ms
2025-04-03 18:12:31 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-your-consumer-group-id-1, groupId=your-consumer-group-id] Node -1 disconnected.
2025-04-03 18:12:31 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-your-consumer-group-id-2, groupId=your-consumer-group-id] Node -1 disconnected.
2025-04-03 18:12:35 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-1, groupId=your-consumer-group-id] Revoke previously assigned partitions reservation-email-topic-0, reservation-email-topic-1, reservation-email-topic-2, reservation-email-topic-3, reservation-email-topic-4
2025-04-03 18:12:35 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-2, groupId=your-consumer-group-id] Revoke previously assigned partitions reservation-cancellation-topic-4, reservation-cancellation-topic-2, reservation-cancellation-topic-3, reservation-cancellation-topic-0, reservation-cancellation-topic-1
2025-04-03 18:12:35 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.springframework.kafka.listener.KafkaMessageListenerContainer - your-consumer-group-id: partitions revoked: [reservation-email-topic-0, reservation-email-topic-1, reservation-email-topic-2, reservation-email-topic-3, reservation-email-topic-4]
2025-04-03 18:12:35 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.springframework.kafka.listener.KafkaMessageListenerContainer - your-consumer-group-id: partitions revoked: [reservation-cancellation-topic-4, reservation-cancellation-topic-2, reservation-cancellation-topic-3, reservation-cancellation-topic-0, reservation-cancellation-topic-1]
2025-04-03 18:12:35 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-2, groupId=your-consumer-group-id] Member consumer-your-consumer-group-id-2-6f59ebf4-ec05-4863-832b-dc1c29991ee5 sending LeaveGroup request to coordinator ATMECSINLT-1581.ATMECS.CORP:9092 (id: 2147483647 rack: null) due to the consumer unsubscribed from all topics
2025-04-03 18:12:35 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-1, groupId=your-consumer-group-id] Member consumer-your-consumer-group-id-1-bd734c25-6dbb-424a-a01b-bf1f223f87ed sending LeaveGroup request to coordinator ATMECSINLT-1581.ATMECS.CORP:9092 (id: 2147483647 rack: null) due to the consumer unsubscribed from all topics
2025-04-03 18:12:35 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-2, groupId=your-consumer-group-id] Resetting generation due to: consumer pro-actively leaving the group
2025-04-03 18:12:35 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-1, groupId=your-consumer-group-id] Resetting generation due to: consumer pro-actively leaving the group
2025-04-03 18:12:35 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-2, groupId=your-consumer-group-id] Request joining group due to: consumer pro-actively leaving the group
2025-04-03 18:12:35 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-1, groupId=your-consumer-group-id] Request joining group due to: consumer pro-actively leaving the group
2025-04-03 18:12:35 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.apache.kafka.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-your-consumer-group-id-2, groupId=your-consumer-group-id] Unsubscribed all topics or patterns and assigned partitions
2025-04-03 18:12:35 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-your-consumer-group-id-1, groupId=your-consumer-group-id] Unsubscribed all topics or patterns and assigned partitions
2025-04-03 18:12:35 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-1, groupId=your-consumer-group-id] Resetting generation due to: consumer pro-actively leaving the group
2025-04-03 18:12:35 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-2, groupId=your-consumer-group-id] Resetting generation due to: consumer pro-actively leaving the group
2025-04-03 18:12:35 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-1, groupId=your-consumer-group-id] Request joining group due to: consumer pro-actively leaving the group
2025-04-03 18:12:35 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-2, groupId=your-consumer-group-id] Request joining group due to: consumer pro-actively leaving the group
2025-04-03 18:12:35 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.apache.kafka.common.metrics.Metrics - Metrics scheduler closed
2025-04-03 18:12:35 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.apache.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-04-03 18:12:35 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.apache.kafka.common.metrics.Metrics - Metrics reporters closed
2025-04-03 18:12:35 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.common.metrics.Metrics - Metrics scheduler closed
2025-04-03 18:12:35 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-04-03 18:12:35 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.common.metrics.Metrics - Metrics reporters closed
2025-04-03 18:12:35 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.apache.kafka.common.utils.AppInfoParser - App info kafka.consumer for consumer-your-consumer-group-id-2 unregistered
2025-04-03 18:12:35 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.common.utils.AppInfoParser - App info kafka.consumer for consumer-your-consumer-group-id-1 unregistered
2025-04-03 18:12:35 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.springframework.kafka.listener.KafkaMessageListenerContainer - your-consumer-group-id: Consumer stopped
2025-04-03 18:12:35 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.springframework.kafka.listener.KafkaMessageListenerContainer - your-consumer-group-id: Consumer stopped
2025-04-03 18:12:35 [SpringApplicationShutdownHook] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-04-03 18:12:35 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-04-03 18:12:36 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-04-03 18:12:40 [restartedMain] INFO  com.app.Application - Starting Application using Java 23.0.1 on ATMECSINLT-1581 with PID 15412 (C:\Users\pranav.chaudhari\Downloads\New folder\Zip\BACK\Hotel-Management-Using-Spring-boot-REST\spring_boot_backend_job\target\classes started by Pranav.Chaudhari in C:\Users\pranav.chaudhari\Downloads\New folder\Zip\BACK\Hotel-Management-Using-Spring-boot-REST\spring_boot_backend_job)
2025-04-03 18:12:40 [restartedMain] INFO  com.app.Application - No active profile set, falling back to 1 default profile: "default"
2025-04-03 18:12:40 [restartedMain] INFO  org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-04-03 18:12:40 [restartedMain] INFO  org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-04-03 18:12:42 [restartedMain] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-04-03 18:12:42 [restartedMain] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-04-03 18:12:42 [restartedMain] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 203 ms. Found 6 JPA repository interfaces.
2025-04-03 18:12:42 [restartedMain] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-04-03 18:12:42 [restartedMain] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-04-03 18:12:42 [restartedMain] INFO  org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.app.dao.BookingRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-04-03 18:12:42 [restartedMain] INFO  org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.app.dao.HotelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-04-03 18:12:42 [restartedMain] INFO  org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.app.dao.PaymentRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-04-03 18:12:42 [restartedMain] INFO  org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.app.dao.ReservationRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-04-03 18:12:42 [restartedMain] INFO  org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.app.dao.RoomRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-04-03 18:12:42 [restartedMain] INFO  org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.app.dao.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-04-03 18:12:42 [restartedMain] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 16 ms. Found 0 Redis repository interfaces.
2025-04-03 18:12:43 [restartedMain] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8081 (http)
2025-04-03 18:12:43 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-04-03 18:12:43 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.83]
2025-04-03 18:12:43 [restartedMain] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-04-03 18:12:43 [restartedMain] INFO  org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 3054 ms
2025-04-03 18:12:44 [restartedMain] INFO  org.hibernate.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-04-03 18:12:44 [restartedMain] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 5.6.15.Final
2025-04-03 18:12:44 [restartedMain] INFO  org.hibernate.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2025-04-03 18:12:44 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-04-03 18:12:45 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-04-03 18:12:45 [restartedMain] INFO  org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
2025-04-03 18:12:47 [restartedMain] INFO  org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2025-04-03 18:12:47 [restartedMain] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-04-03 18:12:50 [restartedMain] INFO  org.springframework.security.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@7945c93c, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@31e7cfeb, org.springframework.security.web.context.SecurityContextPersistenceFilter@1827bdbe, org.springframework.security.web.header.HeaderWriterFilter@133fce66, org.springframework.security.web.authentication.logout.LogoutFilter@66e84f3, org.springframework.security.oauth2.client.web.OAuth2AuthorizationRequestRedirectFilter@4faf1ee2, org.springframework.security.oauth2.client.web.OAuth2LoginAuthenticationFilter@522d90ce, com.app.Util.JwtRequestFilter@663f0fbd, org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter@267ecdd2, org.springframework.security.web.authentication.ui.DefaultLogoutPageGeneratingFilter@34a83913, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@2cb88441, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@1ef1aa45, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@257076b5, org.springframework.security.web.session.SessionManagementFilter@35711a28, org.springframework.security.web.access.ExceptionTranslationFilter@6a465937, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@36b835f1]
2025-04-03 18:12:50 [restartedMain] INFO  org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-04-03 18:12:50 [restartedMain] INFO  org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver - Exposing 3 endpoint(s) beneath base path '/actuator'
2025-04-03 18:12:50 [restartedMain] INFO  org.apache.kafka.clients.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-your-consumer-group-id-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = your-consumer-group-id
	group.instance.id = null
	heartbeat.interval.ms = 5000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 15000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2025-04-03 18:12:50 [restartedMain] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka version: 3.1.2
2025-04-03 18:12:50 [restartedMain] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka commitId: f8c67dc3ae0a3265
2025-04-03 18:12:50 [restartedMain] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1743684170820
2025-04-03 18:12:50 [restartedMain] INFO  org.apache.kafka.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-your-consumer-group-id-1, groupId=your-consumer-group-id] Subscribed to topic(s): reservation-email-topic
2025-04-03 18:12:50 [restartedMain] INFO  org.apache.kafka.clients.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-your-consumer-group-id-2
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = your-consumer-group-id
	group.instance.id = null
	heartbeat.interval.ms = 5000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 15000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2025-04-03 18:12:50 [restartedMain] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka version: 3.1.2
2025-04-03 18:12:50 [restartedMain] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka commitId: f8c67dc3ae0a3265
2025-04-03 18:12:50 [restartedMain] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1743684170854
2025-04-03 18:12:50 [restartedMain] INFO  org.apache.kafka.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-your-consumer-group-id-2, groupId=your-consumer-group-id] Subscribed to topic(s): reservation-cancellation-topic
2025-04-03 18:12:50 [restartedMain] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8081 (http) with context path ''
2025-04-03 18:12:51 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-your-consumer-group-id-2, groupId=your-consumer-group-id] Resetting the last seen epoch of partition reservation-cancellation-topic-0 to 0 since the associated topicId changed from null to NjxvK78KSQygux3z6DKsvg
2025-04-03 18:12:51 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-your-consumer-group-id-1, groupId=your-consumer-group-id] Resetting the last seen epoch of partition reservation-email-topic-0 to 0 since the associated topicId changed from null to MAfQ73XXQOWV54FNwfBbwQ
2025-04-03 18:12:51 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-your-consumer-group-id-2, groupId=your-consumer-group-id] Resetting the last seen epoch of partition reservation-cancellation-topic-1 to 0 since the associated topicId changed from null to NjxvK78KSQygux3z6DKsvg
2025-04-03 18:12:51 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-your-consumer-group-id-1, groupId=your-consumer-group-id] Resetting the last seen epoch of partition reservation-email-topic-1 to 0 since the associated topicId changed from null to MAfQ73XXQOWV54FNwfBbwQ
2025-04-03 18:12:51 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-your-consumer-group-id-2, groupId=your-consumer-group-id] Resetting the last seen epoch of partition reservation-cancellation-topic-4 to 0 since the associated topicId changed from null to NjxvK78KSQygux3z6DKsvg
2025-04-03 18:12:51 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-your-consumer-group-id-1, groupId=your-consumer-group-id] Resetting the last seen epoch of partition reservation-email-topic-4 to 0 since the associated topicId changed from null to MAfQ73XXQOWV54FNwfBbwQ
2025-04-03 18:12:51 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-your-consumer-group-id-1, groupId=your-consumer-group-id] Resetting the last seen epoch of partition reservation-email-topic-2 to 0 since the associated topicId changed from null to MAfQ73XXQOWV54FNwfBbwQ
2025-04-03 18:12:51 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-your-consumer-group-id-2, groupId=your-consumer-group-id] Resetting the last seen epoch of partition reservation-cancellation-topic-2 to 0 since the associated topicId changed from null to NjxvK78KSQygux3z6DKsvg
2025-04-03 18:12:51 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-your-consumer-group-id-1, groupId=your-consumer-group-id] Resetting the last seen epoch of partition reservation-email-topic-3 to 0 since the associated topicId changed from null to MAfQ73XXQOWV54FNwfBbwQ
2025-04-03 18:12:51 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-your-consumer-group-id-2, groupId=your-consumer-group-id] Resetting the last seen epoch of partition reservation-cancellation-topic-3 to 0 since the associated topicId changed from null to NjxvK78KSQygux3z6DKsvg
2025-04-03 18:12:51 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-your-consumer-group-id-1, groupId=your-consumer-group-id] Cluster ID: S5CMbeyDTeq1D5ZSu_zjcw
2025-04-03 18:12:51 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-your-consumer-group-id-2, groupId=your-consumer-group-id] Cluster ID: S5CMbeyDTeq1D5ZSu_zjcw
2025-04-03 18:12:51 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-2, groupId=your-consumer-group-id] Discovered group coordinator ATMECSINLT-1581.ATMECS.CORP:9092 (id: 2147483647 rack: null)
2025-04-03 18:12:51 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-1, groupId=your-consumer-group-id] Discovered group coordinator ATMECSINLT-1581.ATMECS.CORP:9092 (id: 2147483647 rack: null)
2025-04-03 18:12:51 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-1, groupId=your-consumer-group-id] (Re-)joining group
2025-04-03 18:12:51 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-2, groupId=your-consumer-group-id] (Re-)joining group
2025-04-03 18:12:51 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-1, groupId=your-consumer-group-id] Request joining group due to: need to re-join with the given member-id
2025-04-03 18:12:51 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-2, groupId=your-consumer-group-id] Request joining group due to: need to re-join with the given member-id
2025-04-03 18:12:51 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-1, groupId=your-consumer-group-id] (Re-)joining group
2025-04-03 18:12:51 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-2, groupId=your-consumer-group-id] (Re-)joining group
2025-04-03 18:12:51 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-1, groupId=your-consumer-group-id] Successfully joined group with generation Generation{generationId=111, memberId='consumer-your-consumer-group-id-1-9f3856e7-f002-4d06-9e0f-ffab4b994051', protocol='range'}
2025-04-03 18:12:51 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-2, groupId=your-consumer-group-id] Successfully joined group with generation Generation{generationId=111, memberId='consumer-your-consumer-group-id-2-4d24bcf3-12e9-4aae-b319-30a6d6d6fd2b', protocol='range'}
2025-04-03 18:12:51 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-your-consumer-group-id-2, groupId=your-consumer-group-id] Resetting the last seen epoch of partition reservation-email-topic-0 to 0 since the associated topicId changed from null to MAfQ73XXQOWV54FNwfBbwQ
2025-04-03 18:12:51 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-your-consumer-group-id-2, groupId=your-consumer-group-id] Resetting the last seen epoch of partition reservation-email-topic-1 to 0 since the associated topicId changed from null to MAfQ73XXQOWV54FNwfBbwQ
2025-04-03 18:12:51 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-your-consumer-group-id-2, groupId=your-consumer-group-id] Resetting the last seen epoch of partition reservation-email-topic-4 to 0 since the associated topicId changed from null to MAfQ73XXQOWV54FNwfBbwQ
2025-04-03 18:12:51 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-your-consumer-group-id-2, groupId=your-consumer-group-id] Resetting the last seen epoch of partition reservation-email-topic-2 to 0 since the associated topicId changed from null to MAfQ73XXQOWV54FNwfBbwQ
2025-04-03 18:12:51 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-your-consumer-group-id-2, groupId=your-consumer-group-id] Resetting the last seen epoch of partition reservation-email-topic-3 to 0 since the associated topicId changed from null to MAfQ73XXQOWV54FNwfBbwQ
2025-04-03 18:12:51 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-2, groupId=your-consumer-group-id] Finished assignment for group at generation 111: {consumer-your-consumer-group-id-2-4d24bcf3-12e9-4aae-b319-30a6d6d6fd2b=Assignment(partitions=[reservation-cancellation-topic-0, reservation-cancellation-topic-1, reservation-cancellation-topic-2, reservation-cancellation-topic-3, reservation-cancellation-topic-4]), consumer-your-consumer-group-id-1-9f3856e7-f002-4d06-9e0f-ffab4b994051=Assignment(partitions=[reservation-email-topic-0, reservation-email-topic-1, reservation-email-topic-2, reservation-email-topic-3, reservation-email-topic-4])}
2025-04-03 18:12:51 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-1, groupId=your-consumer-group-id] Successfully synced group in generation Generation{generationId=111, memberId='consumer-your-consumer-group-id-1-9f3856e7-f002-4d06-9e0f-ffab4b994051', protocol='range'}
2025-04-03 18:12:51 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-2, groupId=your-consumer-group-id] Successfully synced group in generation Generation{generationId=111, memberId='consumer-your-consumer-group-id-2-4d24bcf3-12e9-4aae-b319-30a6d6d6fd2b', protocol='range'}
2025-04-03 18:12:51 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-1, groupId=your-consumer-group-id] Notifying assignor about the new Assignment(partitions=[reservation-email-topic-0, reservation-email-topic-1, reservation-email-topic-2, reservation-email-topic-3, reservation-email-topic-4])
2025-04-03 18:12:51 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-2, groupId=your-consumer-group-id] Notifying assignor about the new Assignment(partitions=[reservation-cancellation-topic-0, reservation-cancellation-topic-1, reservation-cancellation-topic-2, reservation-cancellation-topic-3, reservation-cancellation-topic-4])
2025-04-03 18:12:51 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-2, groupId=your-consumer-group-id] Adding newly assigned partitions: reservation-cancellation-topic-4, reservation-cancellation-topic-2, reservation-cancellation-topic-3, reservation-cancellation-topic-0, reservation-cancellation-topic-1
2025-04-03 18:12:51 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-1, groupId=your-consumer-group-id] Adding newly assigned partitions: reservation-email-topic-0, reservation-email-topic-1, reservation-email-topic-2, reservation-email-topic-3, reservation-email-topic-4
2025-04-03 18:12:51 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-1, groupId=your-consumer-group-id] Setting offset for partition reservation-email-topic-0 to the committed offset FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[ATMECSINLT-1581.ATMECS.CORP:9092 (id: 0 rack: null)], epoch=0}}
2025-04-03 18:12:51 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-2, groupId=your-consumer-group-id] Setting offset for partition reservation-cancellation-topic-4 to the committed offset FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[ATMECSINLT-1581.ATMECS.CORP:9092 (id: 0 rack: null)], epoch=0}}
2025-04-03 18:12:51 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-2, groupId=your-consumer-group-id] Setting offset for partition reservation-cancellation-topic-2 to the committed offset FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[ATMECSINLT-1581.ATMECS.CORP:9092 (id: 0 rack: null)], epoch=0}}
2025-04-03 18:12:51 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-2, groupId=your-consumer-group-id] Setting offset for partition reservation-cancellation-topic-3 to the committed offset FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[ATMECSINLT-1581.ATMECS.CORP:9092 (id: 0 rack: null)], epoch=0}}
2025-04-03 18:12:51 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-2, groupId=your-consumer-group-id] Setting offset for partition reservation-cancellation-topic-0 to the committed offset FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[ATMECSINLT-1581.ATMECS.CORP:9092 (id: 0 rack: null)], epoch=0}}
2025-04-03 18:12:51 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-2, groupId=your-consumer-group-id] Setting offset for partition reservation-cancellation-topic-1 to the committed offset FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[ATMECSINLT-1581.ATMECS.CORP:9092 (id: 0 rack: null)], epoch=0}}
2025-04-03 18:12:51 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-1, groupId=your-consumer-group-id] Setting offset for partition reservation-email-topic-1 to the committed offset FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[ATMECSINLT-1581.ATMECS.CORP:9092 (id: 0 rack: null)], epoch=0}}
2025-04-03 18:12:51 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-1, groupId=your-consumer-group-id] Setting offset for partition reservation-email-topic-2 to the committed offset FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[ATMECSINLT-1581.ATMECS.CORP:9092 (id: 0 rack: null)], epoch=0}}
2025-04-03 18:12:51 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-1, groupId=your-consumer-group-id] Setting offset for partition reservation-email-topic-3 to the committed offset FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[ATMECSINLT-1581.ATMECS.CORP:9092 (id: 0 rack: null)], epoch=0}}
2025-04-03 18:12:51 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-1, groupId=your-consumer-group-id] Setting offset for partition reservation-email-topic-4 to the committed offset FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[ATMECSINLT-1581.ATMECS.CORP:9092 (id: 0 rack: null)], epoch=0}}
2025-04-03 18:12:51 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.springframework.kafka.listener.KafkaMessageListenerContainer - your-consumer-group-id: partitions assigned: [reservation-email-topic-0, reservation-email-topic-1, reservation-email-topic-2, reservation-email-topic-3, reservation-email-topic-4]
2025-04-03 18:12:51 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.springframework.kafka.listener.KafkaMessageListenerContainer - your-consumer-group-id: partitions assigned: [reservation-cancellation-topic-4, reservation-cancellation-topic-2, reservation-cancellation-topic-3, reservation-cancellation-topic-0, reservation-cancellation-topic-1]
2025-04-03 18:12:51 [restartedMain] INFO  com.app.Application - Started Application in 11.46 seconds (JVM running for 12.575)
2025-04-03 18:12:55 [http-nio-8081-exec-3] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-04-03 18:12:55 [http-nio-8081-exec-3] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-04-03 18:12:55 [http-nio-8081-exec-3] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-04-03 18:18:01 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-2, groupId=your-consumer-group-id] Revoke previously assigned partitions reservation-cancellation-topic-4, reservation-cancellation-topic-2, reservation-cancellation-topic-3, reservation-cancellation-topic-0, reservation-cancellation-topic-1
2025-04-03 18:18:01 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-1, groupId=your-consumer-group-id] Revoke previously assigned partitions reservation-email-topic-0, reservation-email-topic-1, reservation-email-topic-2, reservation-email-topic-3, reservation-email-topic-4
2025-04-03 18:18:01 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.springframework.kafka.listener.KafkaMessageListenerContainer - your-consumer-group-id: partitions revoked: [reservation-cancellation-topic-4, reservation-cancellation-topic-2, reservation-cancellation-topic-3, reservation-cancellation-topic-0, reservation-cancellation-topic-1]
2025-04-03 18:18:01 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.springframework.kafka.listener.KafkaMessageListenerContainer - your-consumer-group-id: partitions revoked: [reservation-email-topic-0, reservation-email-topic-1, reservation-email-topic-2, reservation-email-topic-3, reservation-email-topic-4]
2025-04-03 18:18:01 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-1, groupId=your-consumer-group-id] Member consumer-your-consumer-group-id-1-9f3856e7-f002-4d06-9e0f-ffab4b994051 sending LeaveGroup request to coordinator ATMECSINLT-1581.ATMECS.CORP:9092 (id: 2147483647 rack: null) due to the consumer unsubscribed from all topics
2025-04-03 18:18:01 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-2, groupId=your-consumer-group-id] Member consumer-your-consumer-group-id-2-4d24bcf3-12e9-4aae-b319-30a6d6d6fd2b sending LeaveGroup request to coordinator ATMECSINLT-1581.ATMECS.CORP:9092 (id: 2147483647 rack: null) due to the consumer unsubscribed from all topics
2025-04-03 18:18:01 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-1, groupId=your-consumer-group-id] Resetting generation due to: consumer pro-actively leaving the group
2025-04-03 18:18:01 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-2, groupId=your-consumer-group-id] Resetting generation due to: consumer pro-actively leaving the group
2025-04-03 18:18:01 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-1, groupId=your-consumer-group-id] Request joining group due to: consumer pro-actively leaving the group
2025-04-03 18:18:01 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-2, groupId=your-consumer-group-id] Request joining group due to: consumer pro-actively leaving the group
2025-04-03 18:18:01 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-your-consumer-group-id-1, groupId=your-consumer-group-id] Unsubscribed all topics or patterns and assigned partitions
2025-04-03 18:18:01 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.apache.kafka.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-your-consumer-group-id-2, groupId=your-consumer-group-id] Unsubscribed all topics or patterns and assigned partitions
2025-04-03 18:18:01 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-2, groupId=your-consumer-group-id] Resetting generation due to: consumer pro-actively leaving the group
2025-04-03 18:18:01 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-1, groupId=your-consumer-group-id] Resetting generation due to: consumer pro-actively leaving the group
2025-04-03 18:18:01 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-2, groupId=your-consumer-group-id] Request joining group due to: consumer pro-actively leaving the group
2025-04-03 18:18:01 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-1, groupId=your-consumer-group-id] Request joining group due to: consumer pro-actively leaving the group
2025-04-03 18:18:01 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.apache.kafka.common.metrics.Metrics - Metrics scheduler closed
2025-04-03 18:18:01 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.apache.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-04-03 18:18:01 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.apache.kafka.common.metrics.Metrics - Metrics reporters closed
2025-04-03 18:18:02 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.common.metrics.Metrics - Metrics scheduler closed
2025-04-03 18:18:02 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-04-03 18:18:02 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.common.metrics.Metrics - Metrics reporters closed
2025-04-03 18:18:02 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.apache.kafka.common.utils.AppInfoParser - App info kafka.consumer for consumer-your-consumer-group-id-2 unregistered
2025-04-03 18:18:02 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.springframework.kafka.listener.KafkaMessageListenerContainer - your-consumer-group-id: Consumer stopped
2025-04-03 18:18:02 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.common.utils.AppInfoParser - App info kafka.consumer for consumer-your-consumer-group-id-1 unregistered
2025-04-03 18:18:02 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.springframework.kafka.listener.KafkaMessageListenerContainer - your-consumer-group-id: Consumer stopped
2025-04-03 18:18:02 [SpringApplicationShutdownHook] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-04-03 18:18:02 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-04-03 18:18:02 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-04-03 18:29:48 [restartedMain] INFO  com.app.Application - Starting Application using Java 23.0.1 on ATMECSINLT-1581 with PID 23392 (C:\Users\pranav.chaudhari\Downloads\New folder\Zip\BACK\Hotel-Management-Using-Spring-boot-REST\spring_boot_backend_job\target\classes started by Pranav.Chaudhari in C:\Users\pranav.chaudhari\Downloads\New folder\Zip\BACK\Hotel-Management-Using-Spring-boot-REST\spring_boot_backend_job)
2025-04-03 18:29:48 [restartedMain] INFO  com.app.Application - No active profile set, falling back to 1 default profile: "default"
2025-04-03 18:29:48 [restartedMain] INFO  org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-04-03 18:29:48 [restartedMain] INFO  org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-04-03 18:29:49 [restartedMain] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-04-03 18:29:49 [restartedMain] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-04-03 18:29:50 [restartedMain] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 230 ms. Found 6 JPA repository interfaces.
2025-04-03 18:29:50 [restartedMain] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-04-03 18:29:50 [restartedMain] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-04-03 18:29:50 [restartedMain] INFO  org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.app.dao.BookingRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-04-03 18:29:50 [restartedMain] INFO  org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.app.dao.HotelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-04-03 18:29:50 [restartedMain] INFO  org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.app.dao.PaymentRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-04-03 18:29:50 [restartedMain] INFO  org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.app.dao.ReservationRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-04-03 18:29:50 [restartedMain] INFO  org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.app.dao.RoomRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-04-03 18:29:50 [restartedMain] INFO  org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.app.dao.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-04-03 18:29:50 [restartedMain] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 14 ms. Found 0 Redis repository interfaces.
2025-04-03 18:29:51 [restartedMain] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8081 (http)
2025-04-03 18:29:51 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-04-03 18:29:51 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.83]
2025-04-03 18:29:51 [restartedMain] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-04-03 18:29:51 [restartedMain] INFO  org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 3283 ms
2025-04-03 18:29:52 [restartedMain] INFO  org.hibernate.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-04-03 18:29:52 [restartedMain] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 5.6.15.Final
2025-04-03 18:29:52 [restartedMain] INFO  org.hibernate.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2025-04-03 18:29:52 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-04-03 18:29:53 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-04-03 18:29:53 [restartedMain] INFO  org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
2025-04-03 18:29:56 [restartedMain] INFO  org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2025-04-03 18:29:56 [restartedMain] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-04-03 18:30:00 [restartedMain] INFO  org.springframework.security.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@3403792, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@17fabac9, org.springframework.security.web.context.SecurityContextPersistenceFilter@2f8a604e, org.springframework.security.web.header.HeaderWriterFilter@7d16589b, org.springframework.security.web.authentication.logout.LogoutFilter@7c91e228, org.springframework.security.oauth2.client.web.OAuth2AuthorizationRequestRedirectFilter@6c1e8d70, org.springframework.security.oauth2.client.web.OAuth2LoginAuthenticationFilter@9123fb4, com.app.Util.JwtRequestFilter@47a74c9f, org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter@57d6d76f, org.springframework.security.web.authentication.ui.DefaultLogoutPageGeneratingFilter@703c8e7a, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@467c89be, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@1355e470, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@34161e46, org.springframework.security.web.session.SessionManagementFilter@78aa3cf0, org.springframework.security.web.access.ExceptionTranslationFilter@30c87b81, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@69c473f3]
2025-04-03 18:30:00 [restartedMain] INFO  org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-04-03 18:30:00 [restartedMain] INFO  org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver - Exposing 3 endpoint(s) beneath base path '/actuator'
2025-04-03 18:30:00 [restartedMain] INFO  org.apache.kafka.clients.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-your-consumer-group-id-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = your-consumer-group-id
	group.instance.id = null
	heartbeat.interval.ms = 5000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 15000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2025-04-03 18:30:00 [restartedMain] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka version: 3.1.2
2025-04-03 18:30:00 [restartedMain] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka commitId: f8c67dc3ae0a3265
2025-04-03 18:30:00 [restartedMain] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1743685200790
2025-04-03 18:30:00 [restartedMain] INFO  org.apache.kafka.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-your-consumer-group-id-1, groupId=your-consumer-group-id] Subscribed to topic(s): reservation-email-topic
2025-04-03 18:30:00 [restartedMain] INFO  org.apache.kafka.clients.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-your-consumer-group-id-2
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = your-consumer-group-id
	group.instance.id = null
	heartbeat.interval.ms = 5000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 15000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2025-04-03 18:30:00 [restartedMain] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka version: 3.1.2
2025-04-03 18:30:00 [restartedMain] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka commitId: f8c67dc3ae0a3265
2025-04-03 18:30:00 [restartedMain] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1743685200820
2025-04-03 18:30:00 [restartedMain] INFO  org.apache.kafka.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-your-consumer-group-id-2, groupId=your-consumer-group-id] Subscribed to topic(s): reservation-cancellation-topic
2025-04-03 18:30:00 [restartedMain] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8081 (http) with context path ''
2025-04-03 18:30:01 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-your-consumer-group-id-1, groupId=your-consumer-group-id] Resetting the last seen epoch of partition reservation-email-topic-0 to 0 since the associated topicId changed from null to MAfQ73XXQOWV54FNwfBbwQ
2025-04-03 18:30:01 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-your-consumer-group-id-1, groupId=your-consumer-group-id] Resetting the last seen epoch of partition reservation-email-topic-1 to 0 since the associated topicId changed from null to MAfQ73XXQOWV54FNwfBbwQ
2025-04-03 18:30:01 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-your-consumer-group-id-2, groupId=your-consumer-group-id] Resetting the last seen epoch of partition reservation-cancellation-topic-0 to 0 since the associated topicId changed from null to NjxvK78KSQygux3z6DKsvg
2025-04-03 18:30:01 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-your-consumer-group-id-1, groupId=your-consumer-group-id] Resetting the last seen epoch of partition reservation-email-topic-4 to 0 since the associated topicId changed from null to MAfQ73XXQOWV54FNwfBbwQ
2025-04-03 18:30:01 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-your-consumer-group-id-1, groupId=your-consumer-group-id] Resetting the last seen epoch of partition reservation-email-topic-2 to 0 since the associated topicId changed from null to MAfQ73XXQOWV54FNwfBbwQ
2025-04-03 18:30:01 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-your-consumer-group-id-2, groupId=your-consumer-group-id] Resetting the last seen epoch of partition reservation-cancellation-topic-1 to 0 since the associated topicId changed from null to NjxvK78KSQygux3z6DKsvg
2025-04-03 18:30:01 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-your-consumer-group-id-1, groupId=your-consumer-group-id] Resetting the last seen epoch of partition reservation-email-topic-3 to 0 since the associated topicId changed from null to MAfQ73XXQOWV54FNwfBbwQ
2025-04-03 18:30:01 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-your-consumer-group-id-2, groupId=your-consumer-group-id] Resetting the last seen epoch of partition reservation-cancellation-topic-4 to 0 since the associated topicId changed from null to NjxvK78KSQygux3z6DKsvg
2025-04-03 18:30:01 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-your-consumer-group-id-2, groupId=your-consumer-group-id] Resetting the last seen epoch of partition reservation-cancellation-topic-2 to 0 since the associated topicId changed from null to NjxvK78KSQygux3z6DKsvg
2025-04-03 18:30:01 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-your-consumer-group-id-2, groupId=your-consumer-group-id] Resetting the last seen epoch of partition reservation-cancellation-topic-3 to 0 since the associated topicId changed from null to NjxvK78KSQygux3z6DKsvg
2025-04-03 18:30:01 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-your-consumer-group-id-1, groupId=your-consumer-group-id] Cluster ID: S5CMbeyDTeq1D5ZSu_zjcw
2025-04-03 18:30:01 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-your-consumer-group-id-2, groupId=your-consumer-group-id] Cluster ID: S5CMbeyDTeq1D5ZSu_zjcw
2025-04-03 18:30:01 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-1, groupId=your-consumer-group-id] Discovered group coordinator ATMECSINLT-1581.ATMECS.CORP:9092 (id: 2147483647 rack: null)
2025-04-03 18:30:01 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-2, groupId=your-consumer-group-id] Discovered group coordinator ATMECSINLT-1581.ATMECS.CORP:9092 (id: 2147483647 rack: null)
2025-04-03 18:30:01 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-1, groupId=your-consumer-group-id] (Re-)joining group
2025-04-03 18:30:01 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-2, groupId=your-consumer-group-id] (Re-)joining group
2025-04-03 18:30:01 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-1, groupId=your-consumer-group-id] Request joining group due to: need to re-join with the given member-id
2025-04-03 18:30:01 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-1, groupId=your-consumer-group-id] (Re-)joining group
2025-04-03 18:30:01 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-2, groupId=your-consumer-group-id] Request joining group due to: need to re-join with the given member-id
2025-04-03 18:30:01 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-2, groupId=your-consumer-group-id] (Re-)joining group
2025-04-03 18:30:01 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-1, groupId=your-consumer-group-id] Successfully joined group with generation Generation{generationId=113, memberId='consumer-your-consumer-group-id-1-661fa59e-e0cc-4ecc-8d06-e41784540c84', protocol='range'}
2025-04-03 18:30:01 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-2, groupId=your-consumer-group-id] Successfully joined group with generation Generation{generationId=113, memberId='consumer-your-consumer-group-id-2-22f8b5c8-ceff-4529-9db9-e46a10f8fbdb', protocol='range'}
2025-04-03 18:30:01 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-your-consumer-group-id-1, groupId=your-consumer-group-id] Resetting the last seen epoch of partition reservation-cancellation-topic-0 to 0 since the associated topicId changed from null to NjxvK78KSQygux3z6DKsvg
2025-04-03 18:30:01 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-your-consumer-group-id-1, groupId=your-consumer-group-id] Resetting the last seen epoch of partition reservation-cancellation-topic-1 to 0 since the associated topicId changed from null to NjxvK78KSQygux3z6DKsvg
2025-04-03 18:30:01 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-your-consumer-group-id-1, groupId=your-consumer-group-id] Resetting the last seen epoch of partition reservation-cancellation-topic-4 to 0 since the associated topicId changed from null to NjxvK78KSQygux3z6DKsvg
2025-04-03 18:30:01 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-your-consumer-group-id-1, groupId=your-consumer-group-id] Resetting the last seen epoch of partition reservation-cancellation-topic-2 to 0 since the associated topicId changed from null to NjxvK78KSQygux3z6DKsvg
2025-04-03 18:30:01 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-your-consumer-group-id-1, groupId=your-consumer-group-id] Resetting the last seen epoch of partition reservation-cancellation-topic-3 to 0 since the associated topicId changed from null to NjxvK78KSQygux3z6DKsvg
2025-04-03 18:30:01 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-1, groupId=your-consumer-group-id] Finished assignment for group at generation 113: {consumer-your-consumer-group-id-1-661fa59e-e0cc-4ecc-8d06-e41784540c84=Assignment(partitions=[reservation-email-topic-0, reservation-email-topic-1, reservation-email-topic-2, reservation-email-topic-3, reservation-email-topic-4]), consumer-your-consumer-group-id-2-22f8b5c8-ceff-4529-9db9-e46a10f8fbdb=Assignment(partitions=[reservation-cancellation-topic-0, reservation-cancellation-topic-1, reservation-cancellation-topic-2, reservation-cancellation-topic-3, reservation-cancellation-topic-4])}
2025-04-03 18:30:01 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-1, groupId=your-consumer-group-id] Successfully synced group in generation Generation{generationId=113, memberId='consumer-your-consumer-group-id-1-661fa59e-e0cc-4ecc-8d06-e41784540c84', protocol='range'}
2025-04-03 18:30:01 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-2, groupId=your-consumer-group-id] Successfully synced group in generation Generation{generationId=113, memberId='consumer-your-consumer-group-id-2-22f8b5c8-ceff-4529-9db9-e46a10f8fbdb', protocol='range'}
2025-04-03 18:30:01 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-1, groupId=your-consumer-group-id] Notifying assignor about the new Assignment(partitions=[reservation-email-topic-0, reservation-email-topic-1, reservation-email-topic-2, reservation-email-topic-3, reservation-email-topic-4])
2025-04-03 18:30:01 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-2, groupId=your-consumer-group-id] Notifying assignor about the new Assignment(partitions=[reservation-cancellation-topic-0, reservation-cancellation-topic-1, reservation-cancellation-topic-2, reservation-cancellation-topic-3, reservation-cancellation-topic-4])
2025-04-03 18:30:01 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-1, groupId=your-consumer-group-id] Adding newly assigned partitions: reservation-email-topic-0, reservation-email-topic-1, reservation-email-topic-2, reservation-email-topic-3, reservation-email-topic-4
2025-04-03 18:30:01 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-2, groupId=your-consumer-group-id] Adding newly assigned partitions: reservation-cancellation-topic-4, reservation-cancellation-topic-2, reservation-cancellation-topic-3, reservation-cancellation-topic-0, reservation-cancellation-topic-1
2025-04-03 18:30:01 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-2, groupId=your-consumer-group-id] Setting offset for partition reservation-cancellation-topic-4 to the committed offset FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[ATMECSINLT-1581.ATMECS.CORP:9092 (id: 0 rack: null)], epoch=0}}
2025-04-03 18:30:01 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-1, groupId=your-consumer-group-id] Setting offset for partition reservation-email-topic-0 to the committed offset FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[ATMECSINLT-1581.ATMECS.CORP:9092 (id: 0 rack: null)], epoch=0}}
2025-04-03 18:30:01 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-1, groupId=your-consumer-group-id] Setting offset for partition reservation-email-topic-1 to the committed offset FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[ATMECSINLT-1581.ATMECS.CORP:9092 (id: 0 rack: null)], epoch=0}}
2025-04-03 18:30:01 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-2, groupId=your-consumer-group-id] Setting offset for partition reservation-cancellation-topic-2 to the committed offset FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[ATMECSINLT-1581.ATMECS.CORP:9092 (id: 0 rack: null)], epoch=0}}
2025-04-03 18:30:01 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-2, groupId=your-consumer-group-id] Setting offset for partition reservation-cancellation-topic-3 to the committed offset FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[ATMECSINLT-1581.ATMECS.CORP:9092 (id: 0 rack: null)], epoch=0}}
2025-04-03 18:30:01 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-1, groupId=your-consumer-group-id] Setting offset for partition reservation-email-topic-2 to the committed offset FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[ATMECSINLT-1581.ATMECS.CORP:9092 (id: 0 rack: null)], epoch=0}}
2025-04-03 18:30:01 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-2, groupId=your-consumer-group-id] Setting offset for partition reservation-cancellation-topic-0 to the committed offset FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[ATMECSINLT-1581.ATMECS.CORP:9092 (id: 0 rack: null)], epoch=0}}
2025-04-03 18:30:01 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-1, groupId=your-consumer-group-id] Setting offset for partition reservation-email-topic-3 to the committed offset FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[ATMECSINLT-1581.ATMECS.CORP:9092 (id: 0 rack: null)], epoch=0}}
2025-04-03 18:30:01 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-2, groupId=your-consumer-group-id] Setting offset for partition reservation-cancellation-topic-1 to the committed offset FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[ATMECSINLT-1581.ATMECS.CORP:9092 (id: 0 rack: null)], epoch=0}}
2025-04-03 18:30:01 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-1, groupId=your-consumer-group-id] Setting offset for partition reservation-email-topic-4 to the committed offset FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[ATMECSINLT-1581.ATMECS.CORP:9092 (id: 0 rack: null)], epoch=0}}
2025-04-03 18:30:01 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.springframework.kafka.listener.KafkaMessageListenerContainer - your-consumer-group-id: partitions assigned: [reservation-email-topic-0, reservation-email-topic-1, reservation-email-topic-2, reservation-email-topic-3, reservation-email-topic-4]
2025-04-03 18:30:01 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.springframework.kafka.listener.KafkaMessageListenerContainer - your-consumer-group-id: partitions assigned: [reservation-cancellation-topic-4, reservation-cancellation-topic-2, reservation-cancellation-topic-3, reservation-cancellation-topic-0, reservation-cancellation-topic-1]
2025-04-03 18:30:02 [restartedMain] INFO  com.app.Application - Started Application in 14.586 seconds (JVM running for 15.85)
2025-04-03 18:30:05 [http-nio-8081-exec-1] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-04-03 18:30:05 [http-nio-8081-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-04-03 18:30:05 [http-nio-8081-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 2 ms
2025-04-03 18:39:01 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-your-consumer-group-id-1, groupId=your-consumer-group-id] Node -1 disconnected.
2025-04-03 18:39:01 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-your-consumer-group-id-2, groupId=your-consumer-group-id] Node -1 disconnected.
2025-04-03 19:39:24 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-your-consumer-group-id-1, groupId=your-consumer-group-id] Node 0 disconnected.
2025-04-03 19:39:24 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-your-consumer-group-id-1, groupId=your-consumer-group-id] Cancelled in-flight FETCH request with correlation id 1435 due to node 0 being disconnected (elapsed time since creation: 3503826ms, elapsed time since send: 3503826ms, request timeout: 30000ms)
2025-04-03 19:39:24 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-your-consumer-group-id-1, groupId=your-consumer-group-id] Node 2147483647 disconnected.
2025-04-03 19:39:24 [kafka-coordinator-heartbeat-thread | your-consumer-group-id] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-1, groupId=your-consumer-group-id] Group coordinator ATMECSINLT-1581.ATMECS.CORP:9092 (id: 2147483647 rack: null) is unavailable or invalid due to cause: coordinator unavailable.isDisconnected: true. Rediscovery will be attempted.
2025-04-03 19:39:24 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.FetchSessionHandler - [Consumer clientId=consumer-your-consumer-group-id-1, groupId=your-consumer-group-id] Error sending fetch request (sessionId=1272157563, epoch=1291) to node 0:
org.apache.kafka.common.errors.DisconnectException: null
2025-04-03 19:39:24 [lettuce-nioEventLoop-4-1] INFO  io.lettuce.core.protocol.CommandHandler - null Unexpected exception during request: java.net.SocketException: Connection reset
java.net.SocketException: Connection reset
	at sun.nio.ch.SocketChannelImpl.throwConnectionReset(SocketChannelImpl.java:403) ~[?:?]
	at sun.nio.ch.SocketChannelImpl.implRead(SocketChannelImpl.java:435) ~[?:?]
	at sun.nio.ch.SocketChannelImpl.read(SocketChannelImpl.java:493) ~[?:?]
	at io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:254) ~[netty-buffer-4.1.101.Final.jar:4.1.101.Final]
	at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1132) ~[netty-buffer-4.1.101.Final.jar:4.1.101.Final]
	at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:357) ~[netty-transport-4.1.101.Final.jar:4.1.101.Final]
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:151) ~[netty-transport-4.1.101.Final.jar:4.1.101.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788) ~[netty-transport-4.1.101.Final.jar:4.1.101.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724) ~[netty-transport-4.1.101.Final.jar:4.1.101.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650) ~[netty-transport-4.1.101.Final.jar:4.1.101.Final]
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562) ~[netty-transport-4.1.101.Final.jar:4.1.101.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997) ~[netty-common-4.1.101.Final.jar:4.1.101.Final]
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74) ~[netty-common-4.1.101.Final.jar:4.1.101.Final]
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30) ~[netty-common-4.1.101.Final.jar:4.1.101.Final]
	at java.lang.Thread.run(Thread.java:1575) ~[?:?]
2025-04-03 19:39:24 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-your-consumer-group-id-2, groupId=your-consumer-group-id] Node 0 disconnected.
2025-04-03 19:39:24 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-your-consumer-group-id-2, groupId=your-consumer-group-id] Cancelled in-flight FETCH request with correlation id 1435 due to node 0 being disconnected (elapsed time since creation: 3503762ms, elapsed time since send: 3503762ms, request timeout: 30000ms)
2025-04-03 19:39:24 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-your-consumer-group-id-2, groupId=your-consumer-group-id] Node 2147483647 disconnected.
2025-04-03 19:39:24 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.apache.kafka.clients.FetchSessionHandler - [Consumer clientId=consumer-your-consumer-group-id-2, groupId=your-consumer-group-id] Error sending fetch request (sessionId=1568137421, epoch=1292) to node 0:
org.apache.kafka.common.errors.DisconnectException: null
2025-04-03 19:39:24 [kafka-coordinator-heartbeat-thread | your-consumer-group-id] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-2, groupId=your-consumer-group-id] Group coordinator ATMECSINLT-1581.ATMECS.CORP:9092 (id: 2147483647 rack: null) is unavailable or invalid due to cause: coordinator unavailable.isDisconnected: true. Rediscovery will be attempted.
2025-04-03 19:39:24 [lettuce-eventExecutorLoop-1-7] INFO  io.lettuce.core.protocol.ConnectionWatchdog - Reconnecting, last destination was valkey-adea82e-pranavprem16131-f50a.h.aivencloud.com/134.209.158.147:24941
2025-04-03 19:39:24 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-2, groupId=your-consumer-group-id] Discovered group coordinator ATMECSINLT-1581.ATMECS.CORP:9092 (id: 2147483647 rack: null)
2025-04-03 19:39:24 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-1, groupId=your-consumer-group-id] Discovered group coordinator ATMECSINLT-1581.ATMECS.CORP:9092 (id: 2147483647 rack: null)
2025-04-03 19:39:25 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-2, groupId=your-consumer-group-id] Attempt to heartbeat with Generation{generationId=113, memberId='consumer-your-consumer-group-id-2-22f8b5c8-ceff-4529-9db9-e46a10f8fbdb', protocol='range'} and group instance id Optional.empty failed due to UNKNOWN_MEMBER_ID, resetting generation
2025-04-03 19:39:25 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-1, groupId=your-consumer-group-id] Attempt to heartbeat with Generation{generationId=113, memberId='consumer-your-consumer-group-id-1-661fa59e-e0cc-4ecc-8d06-e41784540c84', protocol='range'} and group instance id Optional.empty failed due to UNKNOWN_MEMBER_ID, resetting generation
2025-04-03 19:39:25 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-2, groupId=your-consumer-group-id] Resetting generation due to: encountered UNKNOWN_MEMBER_ID from HEARTBEAT response
2025-04-03 19:39:25 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-1, groupId=your-consumer-group-id] Resetting generation due to: encountered UNKNOWN_MEMBER_ID from HEARTBEAT response
2025-04-03 19:39:25 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-2, groupId=your-consumer-group-id] Request joining group due to: encountered UNKNOWN_MEMBER_ID from HEARTBEAT response
2025-04-03 19:39:25 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-1, groupId=your-consumer-group-id] Request joining group due to: encountered UNKNOWN_MEMBER_ID from HEARTBEAT response
2025-04-03 19:39:25 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-2, groupId=your-consumer-group-id] Giving away all assigned partitions as lost since generation has been reset,indicating that consumer is no longer part of the group
2025-04-03 19:39:25 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-1, groupId=your-consumer-group-id] Giving away all assigned partitions as lost since generation has been reset,indicating that consumer is no longer part of the group
2025-04-03 19:39:25 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-1, groupId=your-consumer-group-id] Lost previously assigned partitions reservation-email-topic-0, reservation-email-topic-1, reservation-email-topic-2, reservation-email-topic-3, reservation-email-topic-4
2025-04-03 19:39:25 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-2, groupId=your-consumer-group-id] Lost previously assigned partitions reservation-cancellation-topic-4, reservation-cancellation-topic-2, reservation-cancellation-topic-3, reservation-cancellation-topic-0, reservation-cancellation-topic-1
2025-04-03 19:39:25 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.springframework.kafka.listener.KafkaMessageListenerContainer - your-consumer-group-id: partitions lost: [reservation-cancellation-topic-4, reservation-cancellation-topic-2, reservation-cancellation-topic-3, reservation-cancellation-topic-0, reservation-cancellation-topic-1]
2025-04-03 19:39:25 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.springframework.kafka.listener.KafkaMessageListenerContainer - your-consumer-group-id: partitions lost: [reservation-email-topic-0, reservation-email-topic-1, reservation-email-topic-2, reservation-email-topic-3, reservation-email-topic-4]
2025-04-03 19:39:25 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.springframework.kafka.listener.KafkaMessageListenerContainer - your-consumer-group-id: partitions revoked: [reservation-email-topic-0, reservation-email-topic-1, reservation-email-topic-2, reservation-email-topic-3, reservation-email-topic-4]
2025-04-03 19:39:25 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.springframework.kafka.listener.KafkaMessageListenerContainer - your-consumer-group-id: partitions revoked: [reservation-cancellation-topic-4, reservation-cancellation-topic-2, reservation-cancellation-topic-3, reservation-cancellation-topic-0, reservation-cancellation-topic-1]
2025-04-03 19:39:25 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-1, groupId=your-consumer-group-id] (Re-)joining group
2025-04-03 19:39:25 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-2, groupId=your-consumer-group-id] (Re-)joining group
2025-04-03 19:39:25 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-2, groupId=your-consumer-group-id] Request joining group due to: need to re-join with the given member-id
2025-04-03 19:39:25 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-2, groupId=your-consumer-group-id] (Re-)joining group
2025-04-03 19:39:25 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-1, groupId=your-consumer-group-id] Request joining group due to: need to re-join with the given member-id
2025-04-03 19:39:25 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-1, groupId=your-consumer-group-id] (Re-)joining group
2025-04-03 19:39:25 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-2, groupId=your-consumer-group-id] Successfully joined group with generation Generation{generationId=115, memberId='consumer-your-consumer-group-id-2-7e655693-9d49-47e7-88bb-6fa47daa16bd', protocol='range'}
2025-04-03 19:39:25 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-2, groupId=your-consumer-group-id] Finished assignment for group at generation 115: {consumer-your-consumer-group-id-2-7e655693-9d49-47e7-88bb-6fa47daa16bd=Assignment(partitions=[reservation-cancellation-topic-0, reservation-cancellation-topic-1, reservation-cancellation-topic-2, reservation-cancellation-topic-3, reservation-cancellation-topic-4])}
2025-04-03 19:39:25 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-2, groupId=your-consumer-group-id] SyncGroup failed: The group began another rebalance. Need to re-join the group. Sent generation was Generation{generationId=115, memberId='consumer-your-consumer-group-id-2-7e655693-9d49-47e7-88bb-6fa47daa16bd', protocol='range'}
2025-04-03 19:39:25 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-2, groupId=your-consumer-group-id] (Re-)joining group
2025-04-03 19:39:25 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-1, groupId=your-consumer-group-id] Successfully joined group with generation Generation{generationId=116, memberId='consumer-your-consumer-group-id-1-8dae38e7-866a-4d14-ac81-b7002341e787', protocol='range'}
2025-04-03 19:39:25 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-2, groupId=your-consumer-group-id] Successfully joined group with generation Generation{generationId=116, memberId='consumer-your-consumer-group-id-2-7e655693-9d49-47e7-88bb-6fa47daa16bd', protocol='range'}
2025-04-03 19:39:25 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-your-consumer-group-id-2, groupId=your-consumer-group-id] Resetting the last seen epoch of partition reservation-email-topic-0 to 0 since the associated topicId changed from null to MAfQ73XXQOWV54FNwfBbwQ
2025-04-03 19:39:25 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-your-consumer-group-id-2, groupId=your-consumer-group-id] Resetting the last seen epoch of partition reservation-email-topic-1 to 0 since the associated topicId changed from null to MAfQ73XXQOWV54FNwfBbwQ
2025-04-03 19:39:25 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-your-consumer-group-id-2, groupId=your-consumer-group-id] Resetting the last seen epoch of partition reservation-email-topic-4 to 0 since the associated topicId changed from null to MAfQ73XXQOWV54FNwfBbwQ
2025-04-03 19:39:25 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-your-consumer-group-id-2, groupId=your-consumer-group-id] Resetting the last seen epoch of partition reservation-email-topic-2 to 0 since the associated topicId changed from null to MAfQ73XXQOWV54FNwfBbwQ
2025-04-03 19:39:25 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-your-consumer-group-id-2, groupId=your-consumer-group-id] Resetting the last seen epoch of partition reservation-email-topic-3 to 0 since the associated topicId changed from null to MAfQ73XXQOWV54FNwfBbwQ
2025-04-03 19:39:25 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-2, groupId=your-consumer-group-id] Finished assignment for group at generation 116: {consumer-your-consumer-group-id-1-8dae38e7-866a-4d14-ac81-b7002341e787=Assignment(partitions=[reservation-email-topic-0, reservation-email-topic-1, reservation-email-topic-2, reservation-email-topic-3, reservation-email-topic-4]), consumer-your-consumer-group-id-2-7e655693-9d49-47e7-88bb-6fa47daa16bd=Assignment(partitions=[reservation-cancellation-topic-0, reservation-cancellation-topic-1, reservation-cancellation-topic-2, reservation-cancellation-topic-3, reservation-cancellation-topic-4])}
2025-04-03 19:39:25 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-1, groupId=your-consumer-group-id] Successfully synced group in generation Generation{generationId=116, memberId='consumer-your-consumer-group-id-1-8dae38e7-866a-4d14-ac81-b7002341e787', protocol='range'}
2025-04-03 19:39:25 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-1, groupId=your-consumer-group-id] Notifying assignor about the new Assignment(partitions=[reservation-email-topic-0, reservation-email-topic-1, reservation-email-topic-2, reservation-email-topic-3, reservation-email-topic-4])
2025-04-03 19:39:25 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-2, groupId=your-consumer-group-id] Successfully synced group in generation Generation{generationId=116, memberId='consumer-your-consumer-group-id-2-7e655693-9d49-47e7-88bb-6fa47daa16bd', protocol='range'}
2025-04-03 19:39:25 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-1, groupId=your-consumer-group-id] Adding newly assigned partitions: reservation-email-topic-0, reservation-email-topic-1, reservation-email-topic-2, reservation-email-topic-3, reservation-email-topic-4
2025-04-03 19:39:25 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-2, groupId=your-consumer-group-id] Notifying assignor about the new Assignment(partitions=[reservation-cancellation-topic-0, reservation-cancellation-topic-1, reservation-cancellation-topic-2, reservation-cancellation-topic-3, reservation-cancellation-topic-4])
2025-04-03 19:39:25 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-2, groupId=your-consumer-group-id] Adding newly assigned partitions: reservation-cancellation-topic-4, reservation-cancellation-topic-2, reservation-cancellation-topic-3, reservation-cancellation-topic-0, reservation-cancellation-topic-1
2025-04-03 19:39:25 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-2, groupId=your-consumer-group-id] Setting offset for partition reservation-cancellation-topic-4 to the committed offset FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[ATMECSINLT-1581.ATMECS.CORP:9092 (id: 0 rack: null)], epoch=0}}
2025-04-03 19:39:25 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-2, groupId=your-consumer-group-id] Setting offset for partition reservation-cancellation-topic-2 to the committed offset FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[ATMECSINLT-1581.ATMECS.CORP:9092 (id: 0 rack: null)], epoch=0}}
2025-04-03 19:39:25 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-1, groupId=your-consumer-group-id] Setting offset for partition reservation-email-topic-0 to the committed offset FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[ATMECSINLT-1581.ATMECS.CORP:9092 (id: 0 rack: null)], epoch=0}}
2025-04-03 19:39:25 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-1, groupId=your-consumer-group-id] Setting offset for partition reservation-email-topic-1 to the committed offset FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[ATMECSINLT-1581.ATMECS.CORP:9092 (id: 0 rack: null)], epoch=0}}
2025-04-03 19:39:25 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-1, groupId=your-consumer-group-id] Setting offset for partition reservation-email-topic-2 to the committed offset FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[ATMECSINLT-1581.ATMECS.CORP:9092 (id: 0 rack: null)], epoch=0}}
2025-04-03 19:39:25 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-1, groupId=your-consumer-group-id] Setting offset for partition reservation-email-topic-3 to the committed offset FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[ATMECSINLT-1581.ATMECS.CORP:9092 (id: 0 rack: null)], epoch=0}}
2025-04-03 19:39:25 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-1, groupId=your-consumer-group-id] Setting offset for partition reservation-email-topic-4 to the committed offset FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[ATMECSINLT-1581.ATMECS.CORP:9092 (id: 0 rack: null)], epoch=0}}
2025-04-03 19:39:25 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.springframework.kafka.listener.KafkaMessageListenerContainer - your-consumer-group-id: partitions assigned: [reservation-email-topic-0, reservation-email-topic-1, reservation-email-topic-2, reservation-email-topic-3, reservation-email-topic-4]
2025-04-03 19:39:25 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-2, groupId=your-consumer-group-id] Setting offset for partition reservation-cancellation-topic-3 to the committed offset FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[ATMECSINLT-1581.ATMECS.CORP:9092 (id: 0 rack: null)], epoch=0}}
2025-04-03 19:39:25 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-2, groupId=your-consumer-group-id] Setting offset for partition reservation-cancellation-topic-0 to the committed offset FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[ATMECSINLT-1581.ATMECS.CORP:9092 (id: 0 rack: null)], epoch=0}}
2025-04-03 19:39:25 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-2, groupId=your-consumer-group-id] Setting offset for partition reservation-cancellation-topic-1 to the committed offset FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[ATMECSINLT-1581.ATMECS.CORP:9092 (id: 0 rack: null)], epoch=0}}
2025-04-03 19:39:25 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.springframework.kafka.listener.KafkaMessageListenerContainer - your-consumer-group-id: partitions assigned: [reservation-cancellation-topic-4, reservation-cancellation-topic-2, reservation-cancellation-topic-3, reservation-cancellation-topic-0, reservation-cancellation-topic-1]
2025-04-03 19:39:25 [lettuce-nioEventLoop-4-2] INFO  io.lettuce.core.protocol.ReconnectionHandler - Reconnected to valkey-adea82e-pranavprem16131-f50a.h.aivencloud.com/<unresolved>:24941
2025-04-03 19:39:33 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-your-consumer-group-id-2, groupId=your-consumer-group-id] Node 0 disconnected.
2025-04-03 19:39:33 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-your-consumer-group-id-1, groupId=your-consumer-group-id] Node 0 disconnected.
2025-04-03 19:39:33 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-your-consumer-group-id-2, groupId=your-consumer-group-id] Cancelled in-flight FETCH request with correlation id 1466 due to node 0 being disconnected (elapsed time since creation: 510ms, elapsed time since send: 510ms, request timeout: 30000ms)
2025-04-03 19:39:33 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-your-consumer-group-id-1, groupId=your-consumer-group-id] Cancelled in-flight FETCH request with correlation id 1463 due to node 0 being disconnected (elapsed time since creation: 510ms, elapsed time since send: 510ms, request timeout: 30000ms)
2025-04-03 19:39:33 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.apache.kafka.clients.FetchSessionHandler - [Consumer clientId=consumer-your-consumer-group-id-2, groupId=your-consumer-group-id] Error sending fetch request (sessionId=1689598535, epoch=16) to node 0:
org.apache.kafka.common.errors.DisconnectException: null
2025-04-03 19:39:33 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.FetchSessionHandler - [Consumer clientId=consumer-your-consumer-group-id-1, groupId=your-consumer-group-id] Error sending fetch request (sessionId=2040931734, epoch=16) to node 0:
org.apache.kafka.common.errors.DisconnectException: null
2025-04-03 19:39:33 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-your-consumer-group-id-1, groupId=your-consumer-group-id] Node 0 disconnected.
2025-04-03 19:39:33 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-your-consumer-group-id-2, groupId=your-consumer-group-id] Node 0 disconnected.
2025-04-03 19:39:33 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  org.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-your-consumer-group-id-1, groupId=your-consumer-group-id] Connection to node 0 (ATMECSINLT-1581.ATMECS.CORP/192.168.0.101:9092) could not be established. Broker may not be available.
2025-04-03 19:39:33 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] WARN  org.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-your-consumer-group-id-2, groupId=your-consumer-group-id] Connection to node 0 (ATMECSINLT-1581.ATMECS.CORP/192.168.0.101:9092) could not be established. Broker may not be available.
2025-04-03 19:39:33 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.apache.kafka.clients.FetchSessionHandler - [Consumer clientId=consumer-your-consumer-group-id-2, groupId=your-consumer-group-id] Error sending fetch request (sessionId=1689598535, epoch=INITIAL) to node 0:
org.apache.kafka.common.errors.DisconnectException: null
2025-04-03 19:39:33 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.FetchSessionHandler - [Consumer clientId=consumer-your-consumer-group-id-1, groupId=your-consumer-group-id] Error sending fetch request (sessionId=2040931734, epoch=INITIAL) to node 0:
org.apache.kafka.common.errors.DisconnectException: null
2025-04-03 19:39:34 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-your-consumer-group-id-1, groupId=your-consumer-group-id] Node 0 disconnected.
2025-04-03 19:39:34 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-your-consumer-group-id-2, groupId=your-consumer-group-id] Node 0 disconnected.
2025-04-03 19:39:34 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  org.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-your-consumer-group-id-1, groupId=your-consumer-group-id] Connection to node 0 (ATMECSINLT-1581.ATMECS.CORP/192.168.0.101:9092) could not be established. Broker may not be available.
2025-04-03 19:39:34 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] WARN  org.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-your-consumer-group-id-2, groupId=your-consumer-group-id] Connection to node 0 (ATMECSINLT-1581.ATMECS.CORP/192.168.0.101:9092) could not be established. Broker may not be available.
2025-04-03 19:39:34 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.FetchSessionHandler - [Consumer clientId=consumer-your-consumer-group-id-1, groupId=your-consumer-group-id] Error sending fetch request (sessionId=2040931734, epoch=INITIAL) to node 0:
org.apache.kafka.common.errors.DisconnectException: null
2025-04-03 19:39:34 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.apache.kafka.clients.FetchSessionHandler - [Consumer clientId=consumer-your-consumer-group-id-2, groupId=your-consumer-group-id] Error sending fetch request (sessionId=1689598535, epoch=INITIAL) to node 0:
org.apache.kafka.common.errors.DisconnectException: null
2025-04-03 21:24:52 [kafka-coordinator-heartbeat-thread | your-consumer-group-id] INFO  org.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-your-consumer-group-id-1, groupId=your-consumer-group-id] Node 0 disconnected.
2025-04-03 21:24:52 [kafka-coordinator-heartbeat-thread | your-consumer-group-id] WARN  org.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-your-consumer-group-id-1, groupId=your-consumer-group-id] Connection to node 0 (ATMECSINLT-1581.ATMECS.CORP/192.168.0.101:9092) could not be established. Broker may not be available.
2025-04-03 21:24:52 [kafka-coordinator-heartbeat-thread | your-consumer-group-id] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-1, groupId=your-consumer-group-id] Group coordinator ATMECSINLT-1581.ATMECS.CORP:9092 (id: 2147483647 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response.isDisconnected: false. Rediscovery will be attempted.
2025-04-03 21:24:52 [kafka-coordinator-heartbeat-thread | your-consumer-group-id] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-1, groupId=your-consumer-group-id] Requesting disconnect from last known coordinator ATMECSINLT-1581.ATMECS.CORP:9092 (id: 2147483647 rack: null)
2025-04-03 21:24:52 [kafka-coordinator-heartbeat-thread | your-consumer-group-id] INFO  org.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-your-consumer-group-id-1, groupId=your-consumer-group-id] Client requested disconnect from node 2147483647
2025-04-03 21:24:52 [kafka-coordinator-heartbeat-thread | your-consumer-group-id] INFO  org.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-your-consumer-group-id-1, groupId=your-consumer-group-id] Node 0 disconnected.
2025-04-03 21:24:52 [kafka-coordinator-heartbeat-thread | your-consumer-group-id] WARN  org.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-your-consumer-group-id-1, groupId=your-consumer-group-id] Connection to node 0 (ATMECSINLT-1581.ATMECS.CORP/192.168.0.101:9092) could not be established. Broker may not be available.
2025-04-03 21:24:52 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-your-consumer-group-id-2, groupId=your-consumer-group-id] Node 2147483647 disconnected.
2025-04-03 21:24:52 [kafka-coordinator-heartbeat-thread | your-consumer-group-id] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-2, groupId=your-consumer-group-id] Group coordinator ATMECSINLT-1581.ATMECS.CORP:9092 (id: 2147483647 rack: null) is unavailable or invalid due to cause: coordinator unavailable.isDisconnected: true. Rediscovery will be attempted.
2025-04-03 21:24:52 [kafka-coordinator-heartbeat-thread | your-consumer-group-id] INFO  org.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-your-consumer-group-id-2, groupId=your-consumer-group-id] Node 0 disconnected.
2025-04-03 21:24:52 [kafka-coordinator-heartbeat-thread | your-consumer-group-id] WARN  org.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-your-consumer-group-id-2, groupId=your-consumer-group-id] Connection to node 0 (ATMECSINLT-1581.ATMECS.CORP/192.168.0.101:9092) could not be established. Broker may not be available.
2025-04-03 21:24:52 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-your-consumer-group-id-2, groupId=your-consumer-group-id] Node 0 disconnected.
2025-04-03 21:24:52 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] WARN  org.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-your-consumer-group-id-2, groupId=your-consumer-group-id] Connection to node 0 (ATMECSINLT-1581.ATMECS.CORP/192.168.0.101:9092) could not be established. Broker may not be available.
2025-04-03 21:24:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-your-consumer-group-id-1, groupId=your-consumer-group-id] Node 0 disconnected.
2025-04-03 21:24:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  org.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-your-consumer-group-id-1, groupId=your-consumer-group-id] Connection to node 0 (ATMECSINLT-1581.ATMECS.CORP/192.168.0.101:9092) could not be established. Broker may not be available.
2025-04-03 21:24:53 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-2, groupId=your-consumer-group-id] Discovered group coordinator ATMECSINLT-1581.ATMECS.CORP:9092 (id: 2147483647 rack: null)
2025-04-03 21:24:53 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-2, groupId=your-consumer-group-id] Attempt to heartbeat with Generation{generationId=116, memberId='consumer-your-consumer-group-id-2-7e655693-9d49-47e7-88bb-6fa47daa16bd', protocol='range'} and group instance id Optional.empty failed due to UNKNOWN_MEMBER_ID, resetting generation
2025-04-03 21:24:53 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-2, groupId=your-consumer-group-id] Resetting generation due to: encountered UNKNOWN_MEMBER_ID from HEARTBEAT response
2025-04-03 21:24:53 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-2, groupId=your-consumer-group-id] Request joining group due to: encountered UNKNOWN_MEMBER_ID from HEARTBEAT response
2025-04-03 21:24:53 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-2, groupId=your-consumer-group-id] Giving away all assigned partitions as lost since generation has been reset,indicating that consumer is no longer part of the group
2025-04-03 21:24:53 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-2, groupId=your-consumer-group-id] Lost previously assigned partitions reservation-cancellation-topic-4, reservation-cancellation-topic-2, reservation-cancellation-topic-3, reservation-cancellation-topic-0, reservation-cancellation-topic-1
2025-04-03 21:24:53 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.springframework.kafka.listener.KafkaMessageListenerContainer - your-consumer-group-id: partitions lost: [reservation-cancellation-topic-4, reservation-cancellation-topic-2, reservation-cancellation-topic-3, reservation-cancellation-topic-0, reservation-cancellation-topic-1]
2025-04-03 21:24:53 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.springframework.kafka.listener.KafkaMessageListenerContainer - your-consumer-group-id: partitions revoked: [reservation-cancellation-topic-4, reservation-cancellation-topic-2, reservation-cancellation-topic-3, reservation-cancellation-topic-0, reservation-cancellation-topic-1]
2025-04-03 21:24:53 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-2, groupId=your-consumer-group-id] (Re-)joining group
2025-04-03 21:24:53 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-2, groupId=your-consumer-group-id] Request joining group due to: need to re-join with the given member-id
2025-04-03 21:24:53 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-2, groupId=your-consumer-group-id] (Re-)joining group
2025-04-03 21:24:53 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-2, groupId=your-consumer-group-id] Successfully joined group with generation Generation{generationId=118, memberId='consumer-your-consumer-group-id-2-342f98f7-e7b2-4d0c-a2d5-fc13403cf6cf', protocol='range'}
2025-04-03 21:24:53 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-2, groupId=your-consumer-group-id] Finished assignment for group at generation 118: {consumer-your-consumer-group-id-2-342f98f7-e7b2-4d0c-a2d5-fc13403cf6cf=Assignment(partitions=[reservation-cancellation-topic-0, reservation-cancellation-topic-1, reservation-cancellation-topic-2, reservation-cancellation-topic-3, reservation-cancellation-topic-4])}
2025-04-03 21:24:54 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-2, groupId=your-consumer-group-id] Successfully synced group in generation Generation{generationId=118, memberId='consumer-your-consumer-group-id-2-342f98f7-e7b2-4d0c-a2d5-fc13403cf6cf', protocol='range'}
2025-04-03 21:24:54 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-2, groupId=your-consumer-group-id] Notifying assignor about the new Assignment(partitions=[reservation-cancellation-topic-0, reservation-cancellation-topic-1, reservation-cancellation-topic-2, reservation-cancellation-topic-3, reservation-cancellation-topic-4])
2025-04-03 21:24:54 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-2, groupId=your-consumer-group-id] Adding newly assigned partitions: reservation-cancellation-topic-4, reservation-cancellation-topic-2, reservation-cancellation-topic-3, reservation-cancellation-topic-0, reservation-cancellation-topic-1
2025-04-03 21:24:54 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-2, groupId=your-consumer-group-id] Setting offset for partition reservation-cancellation-topic-4 to the committed offset FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[ATMECSINLT-1581.ATMECS.CORP:9092 (id: 0 rack: null)], epoch=0}}
2025-04-03 21:24:54 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-2, groupId=your-consumer-group-id] Setting offset for partition reservation-cancellation-topic-2 to the committed offset FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[ATMECSINLT-1581.ATMECS.CORP:9092 (id: 0 rack: null)], epoch=0}}
2025-04-03 21:24:54 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-2, groupId=your-consumer-group-id] Setting offset for partition reservation-cancellation-topic-3 to the committed offset FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[ATMECSINLT-1581.ATMECS.CORP:9092 (id: 0 rack: null)], epoch=0}}
2025-04-03 21:24:54 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-2, groupId=your-consumer-group-id] Setting offset for partition reservation-cancellation-topic-0 to the committed offset FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[ATMECSINLT-1581.ATMECS.CORP:9092 (id: 0 rack: null)], epoch=0}}
2025-04-03 21:24:54 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-2, groupId=your-consumer-group-id] Setting offset for partition reservation-cancellation-topic-1 to the committed offset FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[ATMECSINLT-1581.ATMECS.CORP:9092 (id: 0 rack: null)], epoch=0}}
2025-04-03 21:24:54 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.springframework.kafka.listener.KafkaMessageListenerContainer - your-consumer-group-id: partitions assigned: [reservation-cancellation-topic-4, reservation-cancellation-topic-2, reservation-cancellation-topic-3, reservation-cancellation-topic-0, reservation-cancellation-topic-1]
2025-04-03 21:24:54 [http-nio-8081-exec-1] ERROR org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
org.springframework.data.redis.RedisSystemException: Redis exception; nested exception is io.lettuce.core.RedisException: java.net.SocketException: Connection reset
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:74) ~[spring-data-redis-2.7.18.jar:2.7.18]
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41) ~[spring-data-redis-2.7.18.jar:2.7.18]
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44) ~[spring-data-redis-2.7.18.jar:2.7.18]
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42) ~[spring-data-redis-2.7.18.jar:2.7.18]
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:277) ~[spring-data-redis-2.7.18.jar:2.7.18]
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1085) ~[spring-data-redis-2.7.18.jar:2.7.18]
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:938) ~[spring-data-redis-2.7.18.jar:2.7.18]
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:665) ~[spring-data-redis-2.7.18.jar:2.7.18]
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker.just(LettuceInvoker.java:109) ~[spring-data-redis-2.7.18.jar:2.7.18]
	at org.springframework.data.redis.connection.lettuce.LettuceStringCommands.incrBy(LettuceStringCommands.java:229) ~[spring-data-redis-2.7.18.jar:2.7.18]
	at org.springframework.data.redis.connection.DefaultedRedisConnection.incrBy(DefaultedRedisConnection.java:377) ~[spring-data-redis-2.7.18.jar:2.7.18]
	at org.springframework.data.redis.connection.DefaultStringRedisConnection.incrBy(DefaultStringRedisConnection.java:668) ~[spring-data-redis-2.7.18.jar:2.7.18]
	at org.springframework.data.redis.core.DefaultValueOperations.lambda$increment$1(DefaultValueOperations.java:167) ~[spring-data-redis-2.7.18.jar:2.7.18]
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224) ~[spring-data-redis-2.7.18.jar:2.7.18]
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191) ~[spring-data-redis-2.7.18.jar:2.7.18]
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97) ~[spring-data-redis-2.7.18.jar:2.7.18]
	at org.springframework.data.redis.core.DefaultValueOperations.increment(DefaultValueOperations.java:167) ~[spring-data-redis-2.7.18.jar:2.7.18]
	at com.app.service.RateLimiterService.isAllowed(RateLimiterService.java:21) ~[classes/:?]
	at com.app.Util.JwtRequestFilter.doFilterInternal(JwtRequestFilter.java:48) ~[classes/:?]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.31.jar:5.3.31]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.11.jar:5.7.11]
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:223) ~[spring-security-web-5.7.11.jar:5.7.11]
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:217) ~[spring-security-web-5.7.11.jar:5.7.11]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.11.jar:5.7.11]
	at org.springframework.security.oauth2.client.web.OAuth2AuthorizationRequestRedirectFilter.doFilterInternal(OAuth2AuthorizationRequestRedirectFilter.java:178) ~[spring-security-oauth2-client-5.7.11.jar:5.7.11]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.31.jar:5.3.31]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.11.jar:5.7.11]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103) ~[spring-security-web-5.7.11.jar:5.7.11]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89) ~[spring-security-web-5.7.11.jar:5.7.11]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.11.jar:5.7.11]
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90) ~[spring-security-web-5.7.11.jar:5.7.11]
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75) ~[spring-security-web-5.7.11.jar:5.7.11]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.31.jar:5.3.31]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.11.jar:5.7.11]
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112) ~[spring-security-web-5.7.11.jar:5.7.11]
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82) ~[spring-security-web-5.7.11.jar:5.7.11]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.11.jar:5.7.11]
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55) ~[spring-security-web-5.7.11.jar:5.7.11]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.31.jar:5.3.31]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.11.jar:5.7.11]
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42) ~[spring-security-web-5.7.11.jar:5.7.11]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.31.jar:5.3.31]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.11.jar:5.7.11]
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221) ~[spring-security-web-5.7.11.jar:5.7.11]
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186) ~[spring-security-web-5.7.11.jar:5.7.11]
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354) ~[spring-web-5.3.31.jar:5.3.31]
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267) ~[spring-web-5.3.31.jar:5.3.31]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.83.jar:9.0.83]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.83.jar:9.0.83]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-5.3.31.jar:5.3.31]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.31.jar:5.3.31]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.83.jar:9.0.83]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.83.jar:9.0.83]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-5.3.31.jar:5.3.31]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.31.jar:5.3.31]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.83.jar:9.0.83]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.83.jar:9.0.83]
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96) ~[spring-boot-actuator-2.7.18.jar:2.7.18]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.31.jar:5.3.31]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.83.jar:9.0.83]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.83.jar:9.0.83]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-5.3.31.jar:5.3.31]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.31.jar:5.3.31]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.83.jar:9.0.83]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.83.jar:9.0.83]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168) ~[tomcat-embed-core-9.0.83.jar:9.0.83]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-9.0.83.jar:9.0.83]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481) ~[tomcat-embed-core-9.0.83.jar:9.0.83]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130) ~[tomcat-embed-core-9.0.83.jar:9.0.83]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-9.0.83.jar:9.0.83]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-9.0.83.jar:9.0.83]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342) ~[tomcat-embed-core-9.0.83.jar:9.0.83]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390) ~[tomcat-embed-core-9.0.83.jar:9.0.83]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-9.0.83.jar:9.0.83]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928) ~[tomcat-embed-core-9.0.83.jar:9.0.83]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794) ~[tomcat-embed-core-9.0.83.jar:9.0.83]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52) ~[tomcat-embed-core-9.0.83.jar:9.0.83]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191) ~[tomcat-embed-core-9.0.83.jar:9.0.83]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) ~[tomcat-embed-core-9.0.83.jar:9.0.83]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) ~[tomcat-embed-core-9.0.83.jar:9.0.83]
	at java.lang.Thread.run(Thread.java:1575) ~[?:?]
Caused by: io.lettuce.core.RedisException: java.net.SocketException: Connection reset
	at io.lettuce.core.internal.Exceptions.bubble(Exceptions.java:83) ~[lettuce-core-6.1.10.RELEASE.jar:6.1.10.RELEASE]
	at io.lettuce.core.internal.Futures.awaitOrCancel(Futures.java:250) ~[lettuce-core-6.1.10.RELEASE.jar:6.1.10.RELEASE]
	at io.lettuce.core.LettuceFutures.awaitOrCancel(LettuceFutures.java:74) ~[lettuce-core-6.1.10.RELEASE.jar:6.1.10.RELEASE]
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1083) ~[spring-data-redis-2.7.18.jar:2.7.18]
	... 75 more
Caused by: java.net.SocketException: Connection reset
	at sun.nio.ch.SocketChannelImpl.throwConnectionReset(SocketChannelImpl.java:403) ~[?:?]
	at sun.nio.ch.SocketChannelImpl.implRead(SocketChannelImpl.java:435) ~[?:?]
	at sun.nio.ch.SocketChannelImpl.read(SocketChannelImpl.java:493) ~[?:?]
	at io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:254) ~[netty-buffer-4.1.101.Final.jar:4.1.101.Final]
	at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1132) ~[netty-buffer-4.1.101.Final.jar:4.1.101.Final]
	at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:357) ~[netty-transport-4.1.101.Final.jar:4.1.101.Final]
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:151) ~[netty-transport-4.1.101.Final.jar:4.1.101.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788) ~[netty-transport-4.1.101.Final.jar:4.1.101.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724) ~[netty-transport-4.1.101.Final.jar:4.1.101.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650) ~[netty-transport-4.1.101.Final.jar:4.1.101.Final]
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562) ~[netty-transport-4.1.101.Final.jar:4.1.101.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997) ~[netty-common-4.1.101.Final.jar:4.1.101.Final]
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74) ~[netty-common-4.1.101.Final.jar:4.1.101.Final]
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30) ~[netty-common-4.1.101.Final.jar:4.1.101.Final]
	... 1 more
2025-04-03 21:24:54 [lettuce-eventExecutorLoop-1-5] INFO  io.lettuce.core.protocol.ConnectionWatchdog - Reconnecting, last destination was valkey-adea82e-pranavprem16131-f50a.h.aivencloud.com/134.209.158.147:24941
2025-04-03 21:24:54 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-1, groupId=your-consumer-group-id] Discovered group coordinator ATMECSINLT-1581.ATMECS.CORP:9092 (id: 2147483647 rack: null)
2025-04-03 21:24:54 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-1, groupId=your-consumer-group-id] Attempt to heartbeat with Generation{generationId=116, memberId='consumer-your-consumer-group-id-1-8dae38e7-866a-4d14-ac81-b7002341e787', protocol='range'} and group instance id Optional.empty failed due to UNKNOWN_MEMBER_ID, resetting generation
2025-04-03 21:24:54 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-1, groupId=your-consumer-group-id] Resetting generation due to: encountered UNKNOWN_MEMBER_ID from HEARTBEAT response
2025-04-03 21:24:54 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-1, groupId=your-consumer-group-id] Request joining group due to: encountered UNKNOWN_MEMBER_ID from HEARTBEAT response
2025-04-03 21:24:54 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-1, groupId=your-consumer-group-id] Giving away all assigned partitions as lost since generation has been reset,indicating that consumer is no longer part of the group
2025-04-03 21:24:54 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-1, groupId=your-consumer-group-id] Lost previously assigned partitions reservation-email-topic-0, reservation-email-topic-1, reservation-email-topic-2, reservation-email-topic-3, reservation-email-topic-4
2025-04-03 21:24:54 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.springframework.kafka.listener.KafkaMessageListenerContainer - your-consumer-group-id: partitions lost: [reservation-email-topic-0, reservation-email-topic-1, reservation-email-topic-2, reservation-email-topic-3, reservation-email-topic-4]
2025-04-03 21:24:54 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.springframework.kafka.listener.KafkaMessageListenerContainer - your-consumer-group-id: partitions revoked: [reservation-email-topic-0, reservation-email-topic-1, reservation-email-topic-2, reservation-email-topic-3, reservation-email-topic-4]
2025-04-03 21:24:54 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-1, groupId=your-consumer-group-id] (Re-)joining group
2025-04-03 21:24:54 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-1, groupId=your-consumer-group-id] Request joining group due to: need to re-join with the given member-id
2025-04-03 21:24:54 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-1, groupId=your-consumer-group-id] (Re-)joining group
2025-04-03 21:24:55 [http-nio-8081-exec-3] WARN  org.apache.catalina.util.SessionIdGeneratorBase - Creation of SecureRandom instance for session ID generation using [SHA1PRNG] took [1,023] milliseconds.
2025-04-03 21:24:55 [lettuce-nioEventLoop-4-3] INFO  io.lettuce.core.protocol.ReconnectionHandler - Reconnected to valkey-adea82e-pranavprem16131-f50a.h.aivencloud.com/<unresolved>:24941
2025-04-03 21:24:59 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-2, groupId=your-consumer-group-id] Request joining group due to: group is already rebalancing
2025-04-03 21:24:59 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-2, groupId=your-consumer-group-id] Revoke previously assigned partitions reservation-cancellation-topic-4, reservation-cancellation-topic-2, reservation-cancellation-topic-3, reservation-cancellation-topic-0, reservation-cancellation-topic-1
2025-04-03 21:24:59 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.springframework.kafka.listener.KafkaMessageListenerContainer - your-consumer-group-id: partitions revoked: [reservation-cancellation-topic-4, reservation-cancellation-topic-2, reservation-cancellation-topic-3, reservation-cancellation-topic-0, reservation-cancellation-topic-1]
2025-04-03 21:24:59 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-2, groupId=your-consumer-group-id] (Re-)joining group
2025-04-03 21:24:59 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-1, groupId=your-consumer-group-id] Successfully joined group with generation Generation{generationId=119, memberId='consumer-your-consumer-group-id-1-9edcbf21-ec72-4f0b-90de-b3449ea7d112', protocol='range'}
2025-04-03 21:24:59 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-2, groupId=your-consumer-group-id] Successfully joined group with generation Generation{generationId=119, memberId='consumer-your-consumer-group-id-2-342f98f7-e7b2-4d0c-a2d5-fc13403cf6cf', protocol='range'}
2025-04-03 21:24:59 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-2, groupId=your-consumer-group-id] Finished assignment for group at generation 119: {consumer-your-consumer-group-id-1-9edcbf21-ec72-4f0b-90de-b3449ea7d112=Assignment(partitions=[reservation-email-topic-0, reservation-email-topic-1, reservation-email-topic-2, reservation-email-topic-3, reservation-email-topic-4]), consumer-your-consumer-group-id-2-342f98f7-e7b2-4d0c-a2d5-fc13403cf6cf=Assignment(partitions=[reservation-cancellation-topic-0, reservation-cancellation-topic-1, reservation-cancellation-topic-2, reservation-cancellation-topic-3, reservation-cancellation-topic-4])}
2025-04-03 21:24:59 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-2, groupId=your-consumer-group-id] Successfully synced group in generation Generation{generationId=119, memberId='consumer-your-consumer-group-id-2-342f98f7-e7b2-4d0c-a2d5-fc13403cf6cf', protocol='range'}
2025-04-03 21:24:59 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-2, groupId=your-consumer-group-id] Notifying assignor about the new Assignment(partitions=[reservation-cancellation-topic-0, reservation-cancellation-topic-1, reservation-cancellation-topic-2, reservation-cancellation-topic-3, reservation-cancellation-topic-4])
2025-04-03 21:24:59 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-2, groupId=your-consumer-group-id] Adding newly assigned partitions: reservation-cancellation-topic-4, reservation-cancellation-topic-2, reservation-cancellation-topic-3, reservation-cancellation-topic-0, reservation-cancellation-topic-1
2025-04-03 21:24:59 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-1, groupId=your-consumer-group-id] Successfully synced group in generation Generation{generationId=119, memberId='consumer-your-consumer-group-id-1-9edcbf21-ec72-4f0b-90de-b3449ea7d112', protocol='range'}
2025-04-03 21:24:59 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-1, groupId=your-consumer-group-id] Notifying assignor about the new Assignment(partitions=[reservation-email-topic-0, reservation-email-topic-1, reservation-email-topic-2, reservation-email-topic-3, reservation-email-topic-4])
2025-04-03 21:24:59 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-1, groupId=your-consumer-group-id] Adding newly assigned partitions: reservation-email-topic-0, reservation-email-topic-1, reservation-email-topic-2, reservation-email-topic-3, reservation-email-topic-4
2025-04-03 21:24:59 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-2, groupId=your-consumer-group-id] Setting offset for partition reservation-cancellation-topic-4 to the committed offset FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[ATMECSINLT-1581.ATMECS.CORP:9092 (id: 0 rack: null)], epoch=0}}
2025-04-03 21:24:59 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-2, groupId=your-consumer-group-id] Setting offset for partition reservation-cancellation-topic-2 to the committed offset FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[ATMECSINLT-1581.ATMECS.CORP:9092 (id: 0 rack: null)], epoch=0}}
2025-04-03 21:24:59 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-2, groupId=your-consumer-group-id] Setting offset for partition reservation-cancellation-topic-3 to the committed offset FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[ATMECSINLT-1581.ATMECS.CORP:9092 (id: 0 rack: null)], epoch=0}}
2025-04-03 21:24:59 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-2, groupId=your-consumer-group-id] Setting offset for partition reservation-cancellation-topic-0 to the committed offset FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[ATMECSINLT-1581.ATMECS.CORP:9092 (id: 0 rack: null)], epoch=0}}
2025-04-03 21:24:59 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-2, groupId=your-consumer-group-id] Setting offset for partition reservation-cancellation-topic-1 to the committed offset FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[ATMECSINLT-1581.ATMECS.CORP:9092 (id: 0 rack: null)], epoch=0}}
2025-04-03 21:24:59 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.springframework.kafka.listener.KafkaMessageListenerContainer - your-consumer-group-id: partitions assigned: [reservation-cancellation-topic-4, reservation-cancellation-topic-2, reservation-cancellation-topic-3, reservation-cancellation-topic-0, reservation-cancellation-topic-1]
2025-04-03 21:24:59 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-1, groupId=your-consumer-group-id] Setting offset for partition reservation-email-topic-0 to the committed offset FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[ATMECSINLT-1581.ATMECS.CORP:9092 (id: 0 rack: null)], epoch=0}}
2025-04-03 21:24:59 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-1, groupId=your-consumer-group-id] Setting offset for partition reservation-email-topic-1 to the committed offset FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[ATMECSINLT-1581.ATMECS.CORP:9092 (id: 0 rack: null)], epoch=0}}
2025-04-03 21:24:59 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-1, groupId=your-consumer-group-id] Setting offset for partition reservation-email-topic-2 to the committed offset FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[ATMECSINLT-1581.ATMECS.CORP:9092 (id: 0 rack: null)], epoch=0}}
2025-04-03 21:24:59 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-1, groupId=your-consumer-group-id] Setting offset for partition reservation-email-topic-3 to the committed offset FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[ATMECSINLT-1581.ATMECS.CORP:9092 (id: 0 rack: null)], epoch=0}}
2025-04-03 21:24:59 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-1, groupId=your-consumer-group-id] Setting offset for partition reservation-email-topic-4 to the committed offset FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[ATMECSINLT-1581.ATMECS.CORP:9092 (id: 0 rack: null)], epoch=0}}
2025-04-03 21:24:59 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.springframework.kafka.listener.KafkaMessageListenerContainer - your-consumer-group-id: partitions assigned: [reservation-email-topic-0, reservation-email-topic-1, reservation-email-topic-2, reservation-email-topic-3, reservation-email-topic-4]
2025-04-03 21:25:05 [HikariPool-1 housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=2h44m21s895ms21µs600ns).
2025-04-03 21:25:16 [http-nio-8081-exec-2] INFO  org.springdoc.api.AbstractOpenApiResource - Init duration for springdoc-openapi is: 1176 ms
2025-04-03 21:29:03 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-2, groupId=your-consumer-group-id] Revoke previously assigned partitions reservation-cancellation-topic-4, reservation-cancellation-topic-2, reservation-cancellation-topic-3, reservation-cancellation-topic-0, reservation-cancellation-topic-1
2025-04-03 21:29:03 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-1, groupId=your-consumer-group-id] Revoke previously assigned partitions reservation-email-topic-0, reservation-email-topic-1, reservation-email-topic-2, reservation-email-topic-3, reservation-email-topic-4
2025-04-03 21:29:03 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.springframework.kafka.listener.KafkaMessageListenerContainer - your-consumer-group-id: partitions revoked: [reservation-cancellation-topic-4, reservation-cancellation-topic-2, reservation-cancellation-topic-3, reservation-cancellation-topic-0, reservation-cancellation-topic-1]
2025-04-03 21:29:03 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-2, groupId=your-consumer-group-id] Member consumer-your-consumer-group-id-2-342f98f7-e7b2-4d0c-a2d5-fc13403cf6cf sending LeaveGroup request to coordinator ATMECSINLT-1581.ATMECS.CORP:9092 (id: 2147483647 rack: null) due to the consumer unsubscribed from all topics
2025-04-03 21:29:03 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.springframework.kafka.listener.KafkaMessageListenerContainer - your-consumer-group-id: partitions revoked: [reservation-email-topic-0, reservation-email-topic-1, reservation-email-topic-2, reservation-email-topic-3, reservation-email-topic-4]
2025-04-03 21:29:03 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-1, groupId=your-consumer-group-id] Member consumer-your-consumer-group-id-1-9edcbf21-ec72-4f0b-90de-b3449ea7d112 sending LeaveGroup request to coordinator ATMECSINLT-1581.ATMECS.CORP:9092 (id: 2147483647 rack: null) due to the consumer unsubscribed from all topics
2025-04-03 21:29:03 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-1, groupId=your-consumer-group-id] Resetting generation due to: consumer pro-actively leaving the group
2025-04-03 21:29:03 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-2, groupId=your-consumer-group-id] Resetting generation due to: consumer pro-actively leaving the group
2025-04-03 21:29:03 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-1, groupId=your-consumer-group-id] Request joining group due to: consumer pro-actively leaving the group
2025-04-03 21:29:03 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-2, groupId=your-consumer-group-id] Request joining group due to: consumer pro-actively leaving the group
2025-04-03 21:29:03 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-your-consumer-group-id-1, groupId=your-consumer-group-id] Unsubscribed all topics or patterns and assigned partitions
2025-04-03 21:29:03 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.apache.kafka.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-your-consumer-group-id-2, groupId=your-consumer-group-id] Unsubscribed all topics or patterns and assigned partitions
2025-04-03 21:29:03 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-2, groupId=your-consumer-group-id] Resetting generation due to: consumer pro-actively leaving the group
2025-04-03 21:29:03 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-1, groupId=your-consumer-group-id] Resetting generation due to: consumer pro-actively leaving the group
2025-04-03 21:29:03 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-2, groupId=your-consumer-group-id] Request joining group due to: consumer pro-actively leaving the group
2025-04-03 21:29:03 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-1, groupId=your-consumer-group-id] Request joining group due to: consumer pro-actively leaving the group
2025-04-03 21:29:03 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.common.metrics.Metrics - Metrics scheduler closed
2025-04-03 21:29:03 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-04-03 21:29:03 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.common.metrics.Metrics - Metrics reporters closed
2025-04-03 21:29:03 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.apache.kafka.common.metrics.Metrics - Metrics scheduler closed
2025-04-03 21:29:03 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.apache.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-04-03 21:29:03 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.apache.kafka.common.metrics.Metrics - Metrics reporters closed
2025-04-03 21:29:03 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.apache.kafka.common.utils.AppInfoParser - App info kafka.consumer for consumer-your-consumer-group-id-2 unregistered
2025-04-03 21:29:03 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.common.utils.AppInfoParser - App info kafka.consumer for consumer-your-consumer-group-id-1 unregistered
2025-04-03 21:29:03 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.springframework.kafka.listener.KafkaMessageListenerContainer - your-consumer-group-id: Consumer stopped
2025-04-03 21:29:03 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.springframework.kafka.listener.KafkaMessageListenerContainer - your-consumer-group-id: Consumer stopped
2025-04-03 21:29:03 [SpringApplicationShutdownHook] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-04-03 21:29:03 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-04-03 21:29:04 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-04-03 21:32:38 [restartedMain] INFO  com.app.Application - Starting Application using Java 23.0.1 on ATMECSINLT-1581 with PID 35712 (C:\Users\pranav.chaudhari\Downloads\New folder\Zip\BACK\Hotel-Management-Using-Spring-boot-REST\spring_boot_backend_job\target\classes started by Pranav.Chaudhari in C:\Users\pranav.chaudhari\Downloads\New folder\Zip\BACK\Hotel-Management-Using-Spring-boot-REST\spring_boot_backend_job)
2025-04-03 21:32:38 [restartedMain] INFO  com.app.Application - No active profile set, falling back to 1 default profile: "default"
2025-04-03 21:32:38 [restartedMain] INFO  org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-04-03 21:32:38 [restartedMain] INFO  org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-04-03 21:32:40 [restartedMain] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-04-03 21:32:40 [restartedMain] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-04-03 21:32:41 [restartedMain] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 427 ms. Found 6 JPA repository interfaces.
2025-04-03 21:32:41 [restartedMain] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-04-03 21:32:41 [restartedMain] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-04-03 21:32:41 [restartedMain] INFO  org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.app.dao.BookingRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-04-03 21:32:41 [restartedMain] INFO  org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.app.dao.HotelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-04-03 21:32:41 [restartedMain] INFO  org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.app.dao.PaymentRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-04-03 21:32:41 [restartedMain] INFO  org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.app.dao.ReservationRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-04-03 21:32:41 [restartedMain] INFO  org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.app.dao.RoomRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-04-03 21:32:41 [restartedMain] INFO  org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.app.dao.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-04-03 21:32:41 [restartedMain] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 86 ms. Found 0 Redis repository interfaces.
2025-04-03 21:32:43 [restartedMain] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8081 (http)
2025-04-03 21:32:43 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-04-03 21:32:43 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.83]
2025-04-03 21:32:43 [restartedMain] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-04-03 21:32:43 [restartedMain] INFO  org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 5290 ms
2025-04-03 21:32:44 [restartedMain] INFO  org.hibernate.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-04-03 21:32:44 [restartedMain] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 5.6.15.Final
2025-04-03 21:32:44 [restartedMain] INFO  org.hibernate.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2025-04-03 21:32:45 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-04-03 21:32:45 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-04-03 21:32:46 [restartedMain] INFO  org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
2025-04-03 21:32:48 [restartedMain] INFO  org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2025-04-03 21:32:48 [restartedMain] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-04-03 21:32:52 [restartedMain] INFO  org.springframework.security.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@58c075a3, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@49500a3b, org.springframework.security.web.context.SecurityContextPersistenceFilter@410ca286, org.springframework.security.web.header.HeaderWriterFilter@72c2ad5f, org.springframework.security.web.authentication.logout.LogoutFilter@513343a4, org.springframework.security.oauth2.client.web.OAuth2AuthorizationRequestRedirectFilter@3fc9ea7c, org.springframework.security.oauth2.client.web.OAuth2LoginAuthenticationFilter@255982a9, com.app.Util.JwtRequestFilter@6826768c, org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter@62668216, org.springframework.security.web.authentication.ui.DefaultLogoutPageGeneratingFilter@7c6eb9de, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@2f4dbd44, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@1e64b9e5, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@c909583, org.springframework.security.web.session.SessionManagementFilter@64a1adea, org.springframework.security.web.access.ExceptionTranslationFilter@433939fb, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@568f17d8]
2025-04-03 21:32:52 [restartedMain] INFO  org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-04-03 21:32:52 [restartedMain] INFO  org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver - Exposing 3 endpoint(s) beneath base path '/actuator'
2025-04-03 21:32:52 [restartedMain] INFO  org.apache.kafka.clients.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-your-consumer-group-id-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = your-consumer-group-id
	group.instance.id = null
	heartbeat.interval.ms = 5000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 15000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2025-04-03 21:32:52 [restartedMain] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka version: 3.1.2
2025-04-03 21:32:52 [restartedMain] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka commitId: f8c67dc3ae0a3265
2025-04-03 21:32:52 [restartedMain] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1743696172488
2025-04-03 21:32:52 [restartedMain] INFO  org.apache.kafka.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-your-consumer-group-id-1, groupId=your-consumer-group-id] Subscribed to topic(s): reservation-email-topic
2025-04-03 21:32:52 [restartedMain] INFO  org.apache.kafka.clients.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-your-consumer-group-id-2
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = your-consumer-group-id
	group.instance.id = null
	heartbeat.interval.ms = 5000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 15000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2025-04-03 21:32:52 [restartedMain] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka version: 3.1.2
2025-04-03 21:32:52 [restartedMain] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka commitId: f8c67dc3ae0a3265
2025-04-03 21:32:52 [restartedMain] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1743696172519
2025-04-03 21:32:52 [restartedMain] INFO  org.apache.kafka.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-your-consumer-group-id-2, groupId=your-consumer-group-id] Subscribed to topic(s): reservation-cancellation-topic
2025-04-03 21:32:52 [restartedMain] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8081 (http) with context path ''
2025-04-03 21:32:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-your-consumer-group-id-1, groupId=your-consumer-group-id] Resetting the last seen epoch of partition reservation-email-topic-0 to 0 since the associated topicId changed from null to MAfQ73XXQOWV54FNwfBbwQ
2025-04-03 21:32:53 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-your-consumer-group-id-2, groupId=your-consumer-group-id] Resetting the last seen epoch of partition reservation-cancellation-topic-0 to 0 since the associated topicId changed from null to NjxvK78KSQygux3z6DKsvg
2025-04-03 21:32:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-your-consumer-group-id-1, groupId=your-consumer-group-id] Resetting the last seen epoch of partition reservation-email-topic-1 to 0 since the associated topicId changed from null to MAfQ73XXQOWV54FNwfBbwQ
2025-04-03 21:32:53 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-your-consumer-group-id-2, groupId=your-consumer-group-id] Resetting the last seen epoch of partition reservation-cancellation-topic-1 to 0 since the associated topicId changed from null to NjxvK78KSQygux3z6DKsvg
2025-04-03 21:32:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-your-consumer-group-id-1, groupId=your-consumer-group-id] Resetting the last seen epoch of partition reservation-email-topic-4 to 0 since the associated topicId changed from null to MAfQ73XXQOWV54FNwfBbwQ
2025-04-03 21:32:53 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-your-consumer-group-id-2, groupId=your-consumer-group-id] Resetting the last seen epoch of partition reservation-cancellation-topic-4 to 0 since the associated topicId changed from null to NjxvK78KSQygux3z6DKsvg
2025-04-03 21:32:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-your-consumer-group-id-1, groupId=your-consumer-group-id] Resetting the last seen epoch of partition reservation-email-topic-2 to 0 since the associated topicId changed from null to MAfQ73XXQOWV54FNwfBbwQ
2025-04-03 21:32:53 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-your-consumer-group-id-2, groupId=your-consumer-group-id] Resetting the last seen epoch of partition reservation-cancellation-topic-2 to 0 since the associated topicId changed from null to NjxvK78KSQygux3z6DKsvg
2025-04-03 21:32:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-your-consumer-group-id-1, groupId=your-consumer-group-id] Resetting the last seen epoch of partition reservation-email-topic-3 to 0 since the associated topicId changed from null to MAfQ73XXQOWV54FNwfBbwQ
2025-04-03 21:32:53 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-your-consumer-group-id-2, groupId=your-consumer-group-id] Resetting the last seen epoch of partition reservation-cancellation-topic-3 to 0 since the associated topicId changed from null to NjxvK78KSQygux3z6DKsvg
2025-04-03 21:32:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-your-consumer-group-id-1, groupId=your-consumer-group-id] Cluster ID: S5CMbeyDTeq1D5ZSu_zjcw
2025-04-03 21:32:53 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-your-consumer-group-id-2, groupId=your-consumer-group-id] Cluster ID: S5CMbeyDTeq1D5ZSu_zjcw
2025-04-03 21:32:53 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-2, groupId=your-consumer-group-id] Discovered group coordinator ATMECSINLT-1581.ATMECS.CORP:9092 (id: 2147483647 rack: null)
2025-04-03 21:32:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-1, groupId=your-consumer-group-id] Discovered group coordinator ATMECSINLT-1581.ATMECS.CORP:9092 (id: 2147483647 rack: null)
2025-04-03 21:32:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-1, groupId=your-consumer-group-id] (Re-)joining group
2025-04-03 21:32:53 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-2, groupId=your-consumer-group-id] (Re-)joining group
2025-04-03 21:32:53 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-2, groupId=your-consumer-group-id] Request joining group due to: need to re-join with the given member-id
2025-04-03 21:32:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-1, groupId=your-consumer-group-id] Request joining group due to: need to re-join with the given member-id
2025-04-03 21:32:53 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-2, groupId=your-consumer-group-id] (Re-)joining group
2025-04-03 21:32:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-1, groupId=your-consumer-group-id] (Re-)joining group
2025-04-03 21:32:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-1, groupId=your-consumer-group-id] Successfully joined group with generation Generation{generationId=121, memberId='consumer-your-consumer-group-id-1-bc772422-c895-4ffe-b4c8-c7b31efb0cef', protocol='range'}
2025-04-03 21:32:53 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-2, groupId=your-consumer-group-id] Successfully joined group with generation Generation{generationId=121, memberId='consumer-your-consumer-group-id-2-3f52638e-5c09-4479-9a35-b5434e7b1639', protocol='range'}
2025-04-03 21:32:53 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-your-consumer-group-id-2, groupId=your-consumer-group-id] Resetting the last seen epoch of partition reservation-email-topic-0 to 0 since the associated topicId changed from null to MAfQ73XXQOWV54FNwfBbwQ
2025-04-03 21:32:53 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-your-consumer-group-id-2, groupId=your-consumer-group-id] Resetting the last seen epoch of partition reservation-email-topic-1 to 0 since the associated topicId changed from null to MAfQ73XXQOWV54FNwfBbwQ
2025-04-03 21:32:53 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-your-consumer-group-id-2, groupId=your-consumer-group-id] Resetting the last seen epoch of partition reservation-email-topic-4 to 0 since the associated topicId changed from null to MAfQ73XXQOWV54FNwfBbwQ
2025-04-03 21:32:53 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-your-consumer-group-id-2, groupId=your-consumer-group-id] Resetting the last seen epoch of partition reservation-email-topic-2 to 0 since the associated topicId changed from null to MAfQ73XXQOWV54FNwfBbwQ
2025-04-03 21:32:53 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-your-consumer-group-id-2, groupId=your-consumer-group-id] Resetting the last seen epoch of partition reservation-email-topic-3 to 0 since the associated topicId changed from null to MAfQ73XXQOWV54FNwfBbwQ
2025-04-03 21:32:53 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-2, groupId=your-consumer-group-id] Finished assignment for group at generation 121: {consumer-your-consumer-group-id-2-3f52638e-5c09-4479-9a35-b5434e7b1639=Assignment(partitions=[reservation-cancellation-topic-0, reservation-cancellation-topic-1, reservation-cancellation-topic-2, reservation-cancellation-topic-3, reservation-cancellation-topic-4]), consumer-your-consumer-group-id-1-bc772422-c895-4ffe-b4c8-c7b31efb0cef=Assignment(partitions=[reservation-email-topic-0, reservation-email-topic-1, reservation-email-topic-2, reservation-email-topic-3, reservation-email-topic-4])}
2025-04-03 21:32:53 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-2, groupId=your-consumer-group-id] Successfully synced group in generation Generation{generationId=121, memberId='consumer-your-consumer-group-id-2-3f52638e-5c09-4479-9a35-b5434e7b1639', protocol='range'}
2025-04-03 21:32:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-1, groupId=your-consumer-group-id] Successfully synced group in generation Generation{generationId=121, memberId='consumer-your-consumer-group-id-1-bc772422-c895-4ffe-b4c8-c7b31efb0cef', protocol='range'}
2025-04-03 21:32:53 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-2, groupId=your-consumer-group-id] Notifying assignor about the new Assignment(partitions=[reservation-cancellation-topic-0, reservation-cancellation-topic-1, reservation-cancellation-topic-2, reservation-cancellation-topic-3, reservation-cancellation-topic-4])
2025-04-03 21:32:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-1, groupId=your-consumer-group-id] Notifying assignor about the new Assignment(partitions=[reservation-email-topic-0, reservation-email-topic-1, reservation-email-topic-2, reservation-email-topic-3, reservation-email-topic-4])
2025-04-03 21:32:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-1, groupId=your-consumer-group-id] Adding newly assigned partitions: reservation-email-topic-0, reservation-email-topic-1, reservation-email-topic-2, reservation-email-topic-3, reservation-email-topic-4
2025-04-03 21:32:53 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-2, groupId=your-consumer-group-id] Adding newly assigned partitions: reservation-cancellation-topic-4, reservation-cancellation-topic-2, reservation-cancellation-topic-3, reservation-cancellation-topic-0, reservation-cancellation-topic-1
2025-04-03 21:32:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-1, groupId=your-consumer-group-id] Setting offset for partition reservation-email-topic-0 to the committed offset FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[ATMECSINLT-1581.ATMECS.CORP:9092 (id: 0 rack: null)], epoch=0}}
2025-04-03 21:32:53 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-2, groupId=your-consumer-group-id] Setting offset for partition reservation-cancellation-topic-4 to the committed offset FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[ATMECSINLT-1581.ATMECS.CORP:9092 (id: 0 rack: null)], epoch=0}}
2025-04-03 21:32:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-1, groupId=your-consumer-group-id] Setting offset for partition reservation-email-topic-1 to the committed offset FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[ATMECSINLT-1581.ATMECS.CORP:9092 (id: 0 rack: null)], epoch=0}}
2025-04-03 21:32:53 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-2, groupId=your-consumer-group-id] Setting offset for partition reservation-cancellation-topic-2 to the committed offset FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[ATMECSINLT-1581.ATMECS.CORP:9092 (id: 0 rack: null)], epoch=0}}
2025-04-03 21:32:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-1, groupId=your-consumer-group-id] Setting offset for partition reservation-email-topic-2 to the committed offset FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[ATMECSINLT-1581.ATMECS.CORP:9092 (id: 0 rack: null)], epoch=0}}
2025-04-03 21:32:53 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-2, groupId=your-consumer-group-id] Setting offset for partition reservation-cancellation-topic-3 to the committed offset FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[ATMECSINLT-1581.ATMECS.CORP:9092 (id: 0 rack: null)], epoch=0}}
2025-04-03 21:32:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-1, groupId=your-consumer-group-id] Setting offset for partition reservation-email-topic-3 to the committed offset FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[ATMECSINLT-1581.ATMECS.CORP:9092 (id: 0 rack: null)], epoch=0}}
2025-04-03 21:32:53 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-2, groupId=your-consumer-group-id] Setting offset for partition reservation-cancellation-topic-0 to the committed offset FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[ATMECSINLT-1581.ATMECS.CORP:9092 (id: 0 rack: null)], epoch=0}}
2025-04-03 21:32:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-1, groupId=your-consumer-group-id] Setting offset for partition reservation-email-topic-4 to the committed offset FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[ATMECSINLT-1581.ATMECS.CORP:9092 (id: 0 rack: null)], epoch=0}}
2025-04-03 21:32:53 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-2, groupId=your-consumer-group-id] Setting offset for partition reservation-cancellation-topic-1 to the committed offset FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[ATMECSINLT-1581.ATMECS.CORP:9092 (id: 0 rack: null)], epoch=0}}
2025-04-03 21:32:53 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.springframework.kafka.listener.KafkaMessageListenerContainer - your-consumer-group-id: partitions assigned: [reservation-cancellation-topic-4, reservation-cancellation-topic-2, reservation-cancellation-topic-3, reservation-cancellation-topic-0, reservation-cancellation-topic-1]
2025-04-03 21:32:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.springframework.kafka.listener.KafkaMessageListenerContainer - your-consumer-group-id: partitions assigned: [reservation-email-topic-0, reservation-email-topic-1, reservation-email-topic-2, reservation-email-topic-3, reservation-email-topic-4]
2025-04-03 21:32:53 [restartedMain] INFO  com.app.Application - Started Application in 16.305 seconds (JVM running for 18.379)
2025-04-03 21:32:55 [http-nio-8081-exec-1] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-04-03 21:32:55 [http-nio-8081-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-04-03 21:32:55 [http-nio-8081-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 2 ms
2025-04-03 21:38:27 [http-nio-8081-exec-5] INFO  org.springdoc.api.AbstractOpenApiResource - Init duration for springdoc-openapi is: 829 ms
2025-04-03 21:41:53 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-your-consumer-group-id-2, groupId=your-consumer-group-id] Node -1 disconnected.
2025-04-03 21:41:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-your-consumer-group-id-1, groupId=your-consumer-group-id] Node -1 disconnected.
2025-04-03 21:45:30 [http-nio-8081-exec-6] WARN  com.app.service.AuthService - Failed authentication attempt for user Sanket: invalid password
2025-04-03 21:45:56 [http-nio-8081-exec-4] INFO  com.app.service.AuthService - User Sanket authenticated successfully
2025-04-03 21:48:54 [http-nio-8081-exec-9] INFO  com.app.controller.ReservationController - Received request to fetch all reservations
2025-04-03 21:48:55 [http-nio-8081-exec-9] INFO  com.app.controller.ReservationController - Fetched 16 reservations
2025-04-03 21:49:02 [http-nio-8081-exec-4] INFO  com.app.controller.ReservationController - Received request to fetch all reservations
2025-04-03 21:49:03 [http-nio-8081-exec-4] INFO  com.app.controller.ReservationController - Fetched 16 reservations
2025-04-03 21:49:03 [http-nio-8081-exec-5] INFO  com.app.controller.ReservationController - Received request to fetch all reservations
2025-04-03 21:49:03 [http-nio-8081-exec-5] INFO  com.app.controller.ReservationController - Fetched 16 reservations
2025-04-03 21:56:32 [http-nio-8081-exec-9] INFO  com.app.controller.ReservationController - Received request to fetch reservation with ID: 10
2025-04-03 21:56:33 [http-nio-8081-exec-9] INFO  com.app.controller.ReservationController - Fetched reservation: Reservation(reservationId=10, guestName=Abhi, checkInDate=2025-01-07, checkOutDate=2025-01-09, totalPrice=1600.00, email=pranavprem16131@gmail.com, status=CONFIRMED)
2025-04-03 22:00:00 [HotelBookingAsyncTask-1] INFO  com.app.service.PaymentServiceImpl - Starting monthly revenue report generation...
2025-04-03 22:00:00 [HotelBookingAsyncTask-1] INFO  com.app.service.PaymentServiceImpl - Fetching payments for reservations with check-in dates between 2025-03-01 and 2025-03-31
2025-04-03 22:00:00 [HotelBookingAsyncTask-1] INFO  com.app.service.PaymentServiceImpl - Total revenue for 2025-03: 3400.00
2025-04-03 22:00:04 [HotelBookingAsyncTask-1] INFO  com.app.service.NotificationService - Email sent successfully to: pranavprem1613@gmail.com
2025-04-03 22:00:04 [HotelBookingAsyncTask-1] INFO  com.app.service.PaymentServiceImpl - Monthly revenue report sent successfully to pranavprem1613@gmail.com
2025-04-03 22:06:29 [http-nio-8081-exec-10] INFO  com.app.controller.ReservationController - Received request to create reservation: CreateReservationRequest(guestName=Sanket, email=patilsanket432000@gmail.com, checkInDate=2025-04-04, checkOutDate=2025-04-05, roomId=2, totalPrice=800)
2025-04-03 22:06:29 [http-nio-8081-exec-10] INFO  com.app.service.HotelServiceImpl - Creating reservation for guest: Sanket
2025-04-03 22:06:29 [http-nio-8081-exec-10] INFO  com.app.service.HotelServiceImpl - Reservation created successfully for room: 2
2025-04-03 22:06:29 [http-nio-8081-exec-10] INFO  com.app.service.HotelServiceImpl - Email is sending: {"email":"patilsanket432000@gmail.com","subject":"Reservation Confirmation for Sanket","body":"<html><head><style>body { font-family: Arial, sans-serif; line-height: 1.6; color: #333; padding: 20px; background-color: #f4f4f4; }h2 { color: #4CAF50; }h3 { color: #555; }table { width: 100%; border-collapse: collapse; margin-top: 20px; background-color: #ffffff; border-radius: 8px; box-shadow: 0px 4px 6px rgba(0, 0, 0, 0.1); }th, td { padding: 12px; text-align: left; border: 1px solid #ddd; }th { background-color: #4CAF50; color: white; border-radius: 6px 6px 0 0; }td { border-radius: 0 0 6px 6px; }.button { display: inline-block; padding: 10px 20px; background-color: #4CAF50; color: white; text-decoration: none; border-radius: 5px; margin-top: 20px; }.footer { margin-top: 30px; font-size: 12px; color: #555; text-align: center; padding-top: 20px; border-top: 1px solid #ddd; }.footer a { color: #4CAF50; text-decoration: none; }</style></head><body><h2>Reservation Confirmation</h2><p>Dear <strong>Sanket</strong>,</p><p>Your reservation has been confirmed. Here are the details:</p><table><tr><th>Check-in Date</th><td>2025-04-04</td></tr><tr><th>Check-out Date</th><td>2025-04-05</td></tr><tr><th>Room Type</th><td>Honeymoon suite</td></tr><tr><th>Total Price</th><td>₹800</td></tr></table><p>We look forward to welcoming you to our hotel. If you have any questions, feel free to reach out to our <a href='https://www.goibibo.com/mysupport/trips/' class='button'>Customer Support</a>.</p><p>Best regards,</p><p>PSC Bookings </p><div class='footer'><p>This is an automated message. Please do not reply directly to this email.</p></div></body></html>"}
2025-04-03 22:06:29 [http-nio-8081-exec-10] INFO  org.apache.kafka.clients.producer.ProducerConfig - ProducerConfig values: 
	acks = -1
	batch.size = 16384
	bootstrap.servers = [localhost:9092]
	buffer.memory = 33554432
	client.dns.lookup = use_all_dns_ips
	client.id = producer-1
	compression.type = none
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 120000
	enable.idempotence = true
	interceptor.classes = []
	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metadata.max.idle.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.class = class org.apache.kafka.clients.producer.internals.DefaultPartitioner
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class org.apache.kafka.common.serialization.StringSerializer

2025-04-03 22:06:29 [http-nio-8081-exec-10] INFO  org.apache.kafka.clients.producer.KafkaProducer - [Producer clientId=producer-1] Instantiated an idempotent producer.
2025-04-03 22:06:29 [http-nio-8081-exec-10] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka version: 3.1.2
2025-04-03 22:06:29 [http-nio-8081-exec-10] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka commitId: f8c67dc3ae0a3265
2025-04-03 22:06:29 [http-nio-8081-exec-10] INFO  org.apache.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1743698189416
2025-04-03 22:06:29 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Resetting the last seen epoch of partition reservation-email-topic-0 to 0 since the associated topicId changed from null to MAfQ73XXQOWV54FNwfBbwQ
2025-04-03 22:06:29 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Resetting the last seen epoch of partition reservation-email-topic-1 to 0 since the associated topicId changed from null to MAfQ73XXQOWV54FNwfBbwQ
2025-04-03 22:06:29 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Resetting the last seen epoch of partition reservation-email-topic-4 to 0 since the associated topicId changed from null to MAfQ73XXQOWV54FNwfBbwQ
2025-04-03 22:06:29 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Resetting the last seen epoch of partition reservation-email-topic-2 to 0 since the associated topicId changed from null to MAfQ73XXQOWV54FNwfBbwQ
2025-04-03 22:06:29 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Resetting the last seen epoch of partition reservation-email-topic-3 to 0 since the associated topicId changed from null to MAfQ73XXQOWV54FNwfBbwQ
2025-04-03 22:06:29 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Cluster ID: S5CMbeyDTeq1D5ZSu_zjcw
2025-04-03 22:06:29 [http-nio-8081-exec-10] INFO  com.app.service.BookingServiceImpl - Creating booking with request: CreateBookingRequest(roomId=2, reservationId=24, bookingDate=2025-04-03T22:06:29.696222700, totalPrice=800)
2025-04-03 22:06:29 [http-nio-8081-exec-10] INFO  com.app.service.BookingServiceImpl - Fetched Room: Room ID = 2
2025-04-03 22:06:29 [http-nio-8081-exec-10] INFO  com.app.service.BookingServiceImpl - Fetched Reservation: Reservation ID = 24
2025-04-03 22:06:29 [http-nio-8081-exec-10] INFO  com.app.service.BookingServiceImpl - Saving payment: Payment(paymentId=24, amount=800, status=PENDING)
2025-04-03 22:06:29 [http-nio-8081-exec-10] INFO  com.app.service.BookingServiceImpl - Saving booking: Booking(id=null, room=Room(roomId=2, roomNumber=A103, type=Honeymoon suite, price=800.00, availability=false, hotel=Hotel(hotelId=1, name=Taj, location=Hyderabad, phoneNumber=9075349438)), reservation=Reservation(reservationId=24, guestName=Sanket, checkInDate=2025-04-04, checkOutDate=2025-04-05, totalPrice=800.00, email=patilsanket432000@gmail.com, status=PENDING), bookingDate=2025-04-03T22:06:29.696222700, totalPrice=800, payment=Payment(paymentId=24, amount=800, status=PENDING))
2025-04-03 22:06:29 [http-nio-8081-exec-10] INFO  com.app.service.BookingServiceImpl - Booking saved: Booking(id=24, room=Room(roomId=2, roomNumber=A103, type=Honeymoon suite, price=800.00, availability=false, hotel=Hotel(hotelId=1, name=Taj, location=Hyderabad, phoneNumber=9075349438)), reservation=Reservation(reservationId=24, guestName=Sanket, checkInDate=2025-04-04, checkOutDate=2025-04-05, totalPrice=800.00, email=patilsanket432000@gmail.com, status=PENDING), bookingDate=2025-04-03T22:06:29.696222700, totalPrice=800, payment=Payment(paymentId=24, amount=800, status=PENDING))
2025-04-03 22:06:29 [http-nio-8081-exec-10] INFO  com.app.controller.ReservationController - Reservation and booking created successfully for guest: Sanket
2025-04-03 22:06:29 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.producer.internals.TransactionManager - [Producer clientId=producer-1] ProducerId set to 0 with epoch 0
2025-04-03 22:06:30 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  com.app.service.EmailMessageListener - Email to: patilsanket432000@gmail.com with subject: Reservation Confirmation for Sanket
2025-04-03 22:06:33 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  com.app.service.NotificationService - Email sent successfully to: patilsanket432000@gmail.com
2025-04-03 22:06:33 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  com.app.service.EmailMessageListener - Email successfully sent to: patilsanket432000@gmail.com
2025-04-03 22:15:59 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Node -1 disconnected.
2025-04-03 22:17:40 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-1, groupId=your-consumer-group-id] Revoke previously assigned partitions reservation-email-topic-0, reservation-email-topic-1, reservation-email-topic-2, reservation-email-topic-3, reservation-email-topic-4
2025-04-03 22:17:40 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-2, groupId=your-consumer-group-id] Revoke previously assigned partitions reservation-cancellation-topic-4, reservation-cancellation-topic-2, reservation-cancellation-topic-3, reservation-cancellation-topic-0, reservation-cancellation-topic-1
2025-04-03 22:17:40 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.springframework.kafka.listener.KafkaMessageListenerContainer - your-consumer-group-id: partitions revoked: [reservation-cancellation-topic-4, reservation-cancellation-topic-2, reservation-cancellation-topic-3, reservation-cancellation-topic-0, reservation-cancellation-topic-1]
2025-04-03 22:17:40 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.springframework.kafka.listener.KafkaMessageListenerContainer - your-consumer-group-id: partitions revoked: [reservation-email-topic-0, reservation-email-topic-1, reservation-email-topic-2, reservation-email-topic-3, reservation-email-topic-4]
2025-04-03 22:17:40 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-2, groupId=your-consumer-group-id] Member consumer-your-consumer-group-id-2-3f52638e-5c09-4479-9a35-b5434e7b1639 sending LeaveGroup request to coordinator ATMECSINLT-1581.ATMECS.CORP:9092 (id: 2147483647 rack: null) due to the consumer unsubscribed from all topics
2025-04-03 22:17:40 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-1, groupId=your-consumer-group-id] Member consumer-your-consumer-group-id-1-bc772422-c895-4ffe-b4c8-c7b31efb0cef sending LeaveGroup request to coordinator ATMECSINLT-1581.ATMECS.CORP:9092 (id: 2147483647 rack: null) due to the consumer unsubscribed from all topics
2025-04-03 22:17:40 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-2, groupId=your-consumer-group-id] Resetting generation due to: consumer pro-actively leaving the group
2025-04-03 22:17:40 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-1, groupId=your-consumer-group-id] Resetting generation due to: consumer pro-actively leaving the group
2025-04-03 22:17:40 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-2, groupId=your-consumer-group-id] Request joining group due to: consumer pro-actively leaving the group
2025-04-03 22:17:40 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-1, groupId=your-consumer-group-id] Request joining group due to: consumer pro-actively leaving the group
2025-04-03 22:17:40 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.apache.kafka.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-your-consumer-group-id-2, groupId=your-consumer-group-id] Unsubscribed all topics or patterns and assigned partitions
2025-04-03 22:17:40 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-your-consumer-group-id-1, groupId=your-consumer-group-id] Unsubscribed all topics or patterns and assigned partitions
2025-04-03 22:17:40 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-2, groupId=your-consumer-group-id] Resetting generation due to: consumer pro-actively leaving the group
2025-04-03 22:17:40 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-1, groupId=your-consumer-group-id] Resetting generation due to: consumer pro-actively leaving the group
2025-04-03 22:17:40 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-2, groupId=your-consumer-group-id] Request joining group due to: consumer pro-actively leaving the group
2025-04-03 22:17:40 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-your-consumer-group-id-1, groupId=your-consumer-group-id] Request joining group due to: consumer pro-actively leaving the group
2025-04-03 22:17:40 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.common.metrics.Metrics - Metrics scheduler closed
2025-04-03 22:17:40 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-04-03 22:17:40 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.common.metrics.Metrics - Metrics reporters closed
2025-04-03 22:17:40 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.apache.kafka.common.metrics.Metrics - Metrics scheduler closed
2025-04-03 22:17:40 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.apache.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-04-03 22:17:40 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.apache.kafka.common.metrics.Metrics - Metrics reporters closed
2025-04-03 22:17:40 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.apache.kafka.common.utils.AppInfoParser - App info kafka.consumer for consumer-your-consumer-group-id-2 unregistered
2025-04-03 22:17:40 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.common.utils.AppInfoParser - App info kafka.consumer for consumer-your-consumer-group-id-1 unregistered
2025-04-03 22:17:40 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.springframework.kafka.listener.KafkaMessageListenerContainer - your-consumer-group-id: Consumer stopped
2025-04-03 22:17:40 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.springframework.kafka.listener.KafkaMessageListenerContainer - your-consumer-group-id: Consumer stopped
2025-04-03 22:17:40 [SpringApplicationShutdownHook] INFO  org.apache.kafka.clients.producer.KafkaProducer - [Producer clientId=producer-1] Closing the Kafka producer with timeoutMillis = 30000 ms.
2025-04-03 22:17:40 [SpringApplicationShutdownHook] INFO  org.apache.kafka.common.metrics.Metrics - Metrics scheduler closed
2025-04-03 22:17:40 [SpringApplicationShutdownHook] INFO  org.apache.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-04-03 22:17:40 [SpringApplicationShutdownHook] INFO  org.apache.kafka.common.metrics.Metrics - Metrics reporters closed
2025-04-03 22:17:40 [SpringApplicationShutdownHook] INFO  org.apache.kafka.common.utils.AppInfoParser - App info kafka.producer for producer-1 unregistered
2025-04-03 22:17:40 [SpringApplicationShutdownHook] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-04-03 22:17:40 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-04-03 22:17:41 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-04-08 16:25:27 [restartedMain] INFO  com.app.Application - Starting Application using Java 23.0.1 on ATMECSINLT-1581 with PID 38556 (C:\Users\pranav.chaudhari\Downloads\New folder\Zip\BACK\Hotel-Management-Using-Spring-boot-REST\spring_boot_backend_job\target\classes started by Pranav.Chaudhari in C:\Users\pranav.chaudhari\Downloads\New folder\Zip\BACK\Hotel-Management-Using-Spring-boot-REST\spring_boot_backend_job)
2025-04-08 16:25:27 [restartedMain] INFO  com.app.Application - No active profile set, falling back to 1 default profile: "default"
2025-04-08 16:25:27 [restartedMain] INFO  org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-04-08 16:25:27 [restartedMain] INFO  org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-04-08 16:25:29 [restartedMain] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-04-08 16:25:29 [restartedMain] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-04-08 16:25:29 [restartedMain] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 173 ms. Found 6 JPA repository interfaces.
2025-04-08 16:25:29 [restartedMain] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-04-08 16:25:29 [restartedMain] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-04-08 16:25:29 [restartedMain] INFO  org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.app.dao.BookingRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-04-08 16:25:29 [restartedMain] INFO  org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.app.dao.HotelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-04-08 16:25:29 [restartedMain] INFO  org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.app.dao.PaymentRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-04-08 16:25:29 [restartedMain] INFO  org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.app.dao.ReservationRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-04-08 16:25:29 [restartedMain] INFO  org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.app.dao.RoomRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-04-08 16:25:29 [restartedMain] INFO  org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.app.dao.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-04-08 16:25:29 [restartedMain] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 15 ms. Found 0 Redis repository interfaces.
2025-04-08 16:25:30 [restartedMain] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8081 (http)
2025-04-08 16:25:30 [restartedMain] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-04-08 16:25:30 [restartedMain] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.83]
2025-04-08 16:25:31 [restartedMain] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-04-08 16:25:31 [restartedMain] INFO  org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 3195 ms
2025-04-08 16:25:31 [restartedMain] INFO  org.hibernate.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-04-08 16:25:31 [restartedMain] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 5.6.15.Final
2025-04-08 16:25:31 [restartedMain] INFO  org.hibernate.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2025-04-08 16:25:32 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-04-08 16:25:32 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-04-08 16:25:32 [restartedMain] INFO  org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
2025-04-08 16:25:35 [restartedMain] INFO  org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2025-04-08 16:25:35 [restartedMain] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-04-08 16:25:36 [restartedMain] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8081 (http) with context path ''
2025-04-08 16:25:36 [restartedMain] INFO  org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-04-08 16:25:36 [http-nio-8081-exec-1] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-04-08 16:25:36 [http-nio-8081-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-04-08 16:25:37 [http-nio-8081-exec-1] INFO  org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver - Exposing 3 endpoint(s) beneath base path '/actuator'
2025-04-08 16:25:38 [restartedMain] INFO  com.app.Application - Started Application in 10.752 seconds (JVM running for 11.951)
2025-04-08 16:25:38 [http-nio-8081-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 1378 ms
2025-04-08 16:25:38 [http-nio-8081-exec-1] INFO  org.springframework.security.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@6da1f3a2, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@5a9e491f, org.springframework.security.web.context.SecurityContextPersistenceFilter@3b9d3466, org.springframework.security.web.header.HeaderWriterFilter@78cb76e1, org.springframework.security.web.authentication.logout.LogoutFilter@7d31073d, org.springframework.security.oauth2.client.web.OAuth2AuthorizationRequestRedirectFilter@72d3c08d, org.springframework.security.oauth2.client.web.OAuth2LoginAuthenticationFilter@3f711f26, com.app.Util.JwtRequestFilter@473e73a4, org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter@1444814e, org.springframework.security.web.authentication.ui.DefaultLogoutPageGeneratingFilter@5786487b, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@4f43b1ef, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@394bdfd4, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@2ac8113, org.springframework.security.web.session.SessionManagementFilter@473335e2, org.springframework.security.web.access.ExceptionTranslationFilter@4e21a921, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@3d6f04b4]
2025-04-08 16:30:00 [HotelBookingAsyncTask-1] INFO  com.app.service.PaymentServiceImpl - Starting monthly revenue report generation...
2025-04-08 16:30:00 [HotelBookingAsyncTask-1] INFO  com.app.service.PaymentServiceImpl - Fetching payments for reservations with check-in dates between 2025-03-01 and 2025-03-31
2025-04-08 16:30:00 [HotelBookingAsyncTask-1] INFO  com.app.service.PaymentServiceImpl - Total revenue for 2025-03: 3400.00
2025-04-08 16:30:04 [HotelBookingAsyncTask-1] INFO  com.app.service.NotificationService - Email sent successfully to: pranavprem1613@gmail.com
2025-04-08 16:30:04 [HotelBookingAsyncTask-1] INFO  com.app.service.PaymentServiceImpl - Monthly revenue report sent successfully to pranavprem1613@gmail.com
2025-04-08 16:46:10 [lettuce-eventExecutorLoop-1-1] INFO  io.lettuce.core.protocol.ConnectionWatchdog - Reconnecting, last destination was valkey-adea82e-pranavprem16131-f50a.h.aivencloud.com/134.209.158.147:24941
2025-04-08 16:46:10 [lettuce-nioEventLoop-4-2] INFO  io.lettuce.core.protocol.ReconnectionHandler - Reconnected to valkey-adea82e-pranavprem16131-f50a.h.aivencloud.com/<unresolved>:24941
2025-04-08 16:46:27 [HikariPool-1 housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=14m24s331ms404µs400ns).
2025-04-08 17:10:11 [http-nio-8081-exec-10] ERROR org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
org.springframework.dao.QueryTimeoutException: Redis command timed out; nested exception is io.lettuce.core.RedisCommandTimeoutException: Command timed out after 5 second(s)
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:70) ~[spring-data-redis-2.7.18.jar:2.7.18]
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41) ~[spring-data-redis-2.7.18.jar:2.7.18]
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44) ~[spring-data-redis-2.7.18.jar:2.7.18]
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42) ~[spring-data-redis-2.7.18.jar:2.7.18]
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:277) ~[spring-data-redis-2.7.18.jar:2.7.18]
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1085) ~[spring-data-redis-2.7.18.jar:2.7.18]
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:938) ~[spring-data-redis-2.7.18.jar:2.7.18]
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:665) ~[spring-data-redis-2.7.18.jar:2.7.18]
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker.just(LettuceInvoker.java:109) ~[spring-data-redis-2.7.18.jar:2.7.18]
	at org.springframework.data.redis.connection.lettuce.LettuceStringCommands.incrBy(LettuceStringCommands.java:229) ~[spring-data-redis-2.7.18.jar:2.7.18]
	at org.springframework.data.redis.connection.DefaultedRedisConnection.incrBy(DefaultedRedisConnection.java:377) ~[spring-data-redis-2.7.18.jar:2.7.18]
	at org.springframework.data.redis.connection.DefaultStringRedisConnection.incrBy(DefaultStringRedisConnection.java:668) ~[spring-data-redis-2.7.18.jar:2.7.18]
	at org.springframework.data.redis.core.DefaultValueOperations.lambda$increment$1(DefaultValueOperations.java:167) ~[spring-data-redis-2.7.18.jar:2.7.18]
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224) ~[spring-data-redis-2.7.18.jar:2.7.18]
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191) ~[spring-data-redis-2.7.18.jar:2.7.18]
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97) ~[spring-data-redis-2.7.18.jar:2.7.18]
	at org.springframework.data.redis.core.DefaultValueOperations.increment(DefaultValueOperations.java:167) ~[spring-data-redis-2.7.18.jar:2.7.18]
	at com.app.service.RateLimiterService.isAllowed(RateLimiterService.java:21) ~[classes/:?]
	at com.app.Util.JwtRequestFilter.doFilterInternal(JwtRequestFilter.java:48) ~[classes/:?]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.31.jar:5.3.31]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.11.jar:5.7.11]
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:223) ~[spring-security-web-5.7.11.jar:5.7.11]
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:217) ~[spring-security-web-5.7.11.jar:5.7.11]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.11.jar:5.7.11]
	at org.springframework.security.oauth2.client.web.OAuth2AuthorizationRequestRedirectFilter.doFilterInternal(OAuth2AuthorizationRequestRedirectFilter.java:178) ~[spring-security-oauth2-client-5.7.11.jar:5.7.11]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.31.jar:5.3.31]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.11.jar:5.7.11]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103) ~[spring-security-web-5.7.11.jar:5.7.11]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89) ~[spring-security-web-5.7.11.jar:5.7.11]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.11.jar:5.7.11]
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90) ~[spring-security-web-5.7.11.jar:5.7.11]
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75) ~[spring-security-web-5.7.11.jar:5.7.11]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.31.jar:5.3.31]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.11.jar:5.7.11]
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112) ~[spring-security-web-5.7.11.jar:5.7.11]
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82) ~[spring-security-web-5.7.11.jar:5.7.11]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.11.jar:5.7.11]
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55) ~[spring-security-web-5.7.11.jar:5.7.11]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.31.jar:5.3.31]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.11.jar:5.7.11]
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42) ~[spring-security-web-5.7.11.jar:5.7.11]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.31.jar:5.3.31]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.11.jar:5.7.11]
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221) ~[spring-security-web-5.7.11.jar:5.7.11]
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186) ~[spring-security-web-5.7.11.jar:5.7.11]
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354) ~[spring-web-5.3.31.jar:5.3.31]
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267) ~[spring-web-5.3.31.jar:5.3.31]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.83.jar:9.0.83]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.83.jar:9.0.83]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-5.3.31.jar:5.3.31]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.31.jar:5.3.31]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.83.jar:9.0.83]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.83.jar:9.0.83]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-5.3.31.jar:5.3.31]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.31.jar:5.3.31]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.83.jar:9.0.83]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.83.jar:9.0.83]
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96) ~[spring-boot-actuator-2.7.18.jar:2.7.18]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.31.jar:5.3.31]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.83.jar:9.0.83]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.83.jar:9.0.83]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-5.3.31.jar:5.3.31]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.31.jar:5.3.31]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.83.jar:9.0.83]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.83.jar:9.0.83]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168) ~[tomcat-embed-core-9.0.83.jar:9.0.83]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-9.0.83.jar:9.0.83]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481) ~[tomcat-embed-core-9.0.83.jar:9.0.83]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130) ~[tomcat-embed-core-9.0.83.jar:9.0.83]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-9.0.83.jar:9.0.83]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-9.0.83.jar:9.0.83]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342) ~[tomcat-embed-core-9.0.83.jar:9.0.83]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390) ~[tomcat-embed-core-9.0.83.jar:9.0.83]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-9.0.83.jar:9.0.83]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928) ~[tomcat-embed-core-9.0.83.jar:9.0.83]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794) ~[tomcat-embed-core-9.0.83.jar:9.0.83]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52) ~[tomcat-embed-core-9.0.83.jar:9.0.83]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191) ~[tomcat-embed-core-9.0.83.jar:9.0.83]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) ~[tomcat-embed-core-9.0.83.jar:9.0.83]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) ~[tomcat-embed-core-9.0.83.jar:9.0.83]
	at java.lang.Thread.run(Thread.java:1575) ~[?:?]
Caused by: io.lettuce.core.RedisCommandTimeoutException: Command timed out after 5 second(s)
	at io.lettuce.core.internal.ExceptionFactory.createTimeoutException(ExceptionFactory.java:59) ~[lettuce-core-6.1.10.RELEASE.jar:6.1.10.RELEASE]
	at io.lettuce.core.internal.Futures.awaitOrCancel(Futures.java:246) ~[lettuce-core-6.1.10.RELEASE.jar:6.1.10.RELEASE]
	at io.lettuce.core.LettuceFutures.awaitOrCancel(LettuceFutures.java:74) ~[lettuce-core-6.1.10.RELEASE.jar:6.1.10.RELEASE]
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1083) ~[spring-data-redis-2.7.18.jar:2.7.18]
	... 75 more
2025-04-08 17:13:54 [HotelBookingAsyncTask-2] INFO  com.app.service.PaymentServiceImpl - Starting monthly revenue report generation...
2025-04-08 17:13:54 [HotelBookingAsyncTask-2] INFO  com.app.service.PaymentServiceImpl - Fetching payments for reservations with check-in dates between 2025-03-01 and 2025-03-31
2025-04-08 17:13:54 [HotelBookingAsyncTask-2] INFO  com.app.service.PaymentServiceImpl - Total revenue for 2025-03: 3400.00
2025-04-08 17:13:58 [HotelBookingAsyncTask-2] INFO  com.app.service.NotificationService - Email sent successfully to: pranavprem1613@gmail.com
2025-04-08 17:13:58 [HotelBookingAsyncTask-2] INFO  com.app.service.PaymentServiceImpl - Monthly revenue report sent successfully to pranavprem1613@gmail.com
2025-04-08 17:17:52 [HikariPool-1 housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1m24s85ms339µs300ns).
2025-04-08 17:30:54 [HotelBookingAsyncTask-3] INFO  com.app.service.PaymentServiceImpl - Starting monthly revenue report generation...
2025-04-08 17:30:54 [HotelBookingAsyncTask-3] INFO  com.app.service.PaymentServiceImpl - Fetching payments for reservations with check-in dates between 2025-03-01 and 2025-03-31
2025-04-08 17:30:54 [HotelBookingAsyncTask-3] INFO  com.app.service.PaymentServiceImpl - Total revenue for 2025-03: 3400.00
2025-04-08 17:30:58 [HotelBookingAsyncTask-3] INFO  com.app.service.NotificationService - Email sent successfully to: pranavprem1613@gmail.com
2025-04-08 17:30:58 [HotelBookingAsyncTask-3] INFO  com.app.service.PaymentServiceImpl - Monthly revenue report sent successfully to pranavprem1613@gmail.com
2025-04-08 17:48:43 [http-nio-8081-exec-2] INFO  org.springdoc.api.AbstractOpenApiResource - Init duration for springdoc-openapi is: 941 ms
2025-04-08 18:00:00 [HotelBookingAsyncTask-4] INFO  com.app.service.PaymentServiceImpl - Starting monthly revenue report generation...
2025-04-08 18:00:00 [HotelBookingAsyncTask-4] INFO  com.app.service.PaymentServiceImpl - Fetching payments for reservations with check-in dates between 2025-03-01 and 2025-03-31
2025-04-08 18:00:00 [HotelBookingAsyncTask-4] INFO  com.app.service.PaymentServiceImpl - Total revenue for 2025-03: 3400.00
2025-04-08 18:00:04 [HotelBookingAsyncTask-4] INFO  com.app.service.NotificationService - Email sent successfully to: pranavprem1613@gmail.com
2025-04-08 18:00:04 [HotelBookingAsyncTask-4] INFO  com.app.service.PaymentServiceImpl - Monthly revenue report sent successfully to pranavprem1613@gmail.com
2025-04-08 18:20:22 [http-nio-8081-exec-8] ERROR org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
org.springframework.data.redis.RedisSystemException: Redis exception; nested exception is io.lettuce.core.RedisException: java.net.SocketException: Connection reset
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:74) ~[spring-data-redis-2.7.18.jar:2.7.18]
	at org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41) ~[spring-data-redis-2.7.18.jar:2.7.18]
	at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44) ~[spring-data-redis-2.7.18.jar:2.7.18]
	at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42) ~[spring-data-redis-2.7.18.jar:2.7.18]
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:277) ~[spring-data-redis-2.7.18.jar:2.7.18]
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1085) ~[spring-data-redis-2.7.18.jar:2.7.18]
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.lambda$doInvoke$4(LettuceConnection.java:938) ~[spring-data-redis-2.7.18.jar:2.7.18]
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker$Synchronizer.invoke(LettuceInvoker.java:665) ~[spring-data-redis-2.7.18.jar:2.7.18]
	at org.springframework.data.redis.connection.lettuce.LettuceInvoker.just(LettuceInvoker.java:109) ~[spring-data-redis-2.7.18.jar:2.7.18]
	at org.springframework.data.redis.connection.lettuce.LettuceStringCommands.incrBy(LettuceStringCommands.java:229) ~[spring-data-redis-2.7.18.jar:2.7.18]
	at org.springframework.data.redis.connection.DefaultedRedisConnection.incrBy(DefaultedRedisConnection.java:377) ~[spring-data-redis-2.7.18.jar:2.7.18]
	at org.springframework.data.redis.connection.DefaultStringRedisConnection.incrBy(DefaultStringRedisConnection.java:668) ~[spring-data-redis-2.7.18.jar:2.7.18]
	at org.springframework.data.redis.core.DefaultValueOperations.lambda$increment$1(DefaultValueOperations.java:167) ~[spring-data-redis-2.7.18.jar:2.7.18]
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224) ~[spring-data-redis-2.7.18.jar:2.7.18]
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:191) ~[spring-data-redis-2.7.18.jar:2.7.18]
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:97) ~[spring-data-redis-2.7.18.jar:2.7.18]
	at org.springframework.data.redis.core.DefaultValueOperations.increment(DefaultValueOperations.java:167) ~[spring-data-redis-2.7.18.jar:2.7.18]
	at com.app.service.RateLimiterService.isAllowed(RateLimiterService.java:21) ~[classes/:?]
	at com.app.Util.JwtRequestFilter.doFilterInternal(JwtRequestFilter.java:48) ~[classes/:?]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.31.jar:5.3.31]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.11.jar:5.7.11]
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:223) ~[spring-security-web-5.7.11.jar:5.7.11]
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:217) ~[spring-security-web-5.7.11.jar:5.7.11]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.11.jar:5.7.11]
	at org.springframework.security.oauth2.client.web.OAuth2AuthorizationRequestRedirectFilter.doFilterInternal(OAuth2AuthorizationRequestRedirectFilter.java:178) ~[spring-security-oauth2-client-5.7.11.jar:5.7.11]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.31.jar:5.3.31]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.11.jar:5.7.11]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103) ~[spring-security-web-5.7.11.jar:5.7.11]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89) ~[spring-security-web-5.7.11.jar:5.7.11]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.11.jar:5.7.11]
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90) ~[spring-security-web-5.7.11.jar:5.7.11]
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75) ~[spring-security-web-5.7.11.jar:5.7.11]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.31.jar:5.3.31]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.11.jar:5.7.11]
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112) ~[spring-security-web-5.7.11.jar:5.7.11]
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82) ~[spring-security-web-5.7.11.jar:5.7.11]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.11.jar:5.7.11]
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55) ~[spring-security-web-5.7.11.jar:5.7.11]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.31.jar:5.3.31]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.11.jar:5.7.11]
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42) ~[spring-security-web-5.7.11.jar:5.7.11]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.31.jar:5.3.31]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346) ~[spring-security-web-5.7.11.jar:5.7.11]
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221) ~[spring-security-web-5.7.11.jar:5.7.11]
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186) ~[spring-security-web-5.7.11.jar:5.7.11]
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354) ~[spring-web-5.3.31.jar:5.3.31]
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267) ~[spring-web-5.3.31.jar:5.3.31]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.83.jar:9.0.83]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.83.jar:9.0.83]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-5.3.31.jar:5.3.31]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.31.jar:5.3.31]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.83.jar:9.0.83]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.83.jar:9.0.83]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-5.3.31.jar:5.3.31]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.31.jar:5.3.31]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.83.jar:9.0.83]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.83.jar:9.0.83]
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96) ~[spring-boot-actuator-2.7.18.jar:2.7.18]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.31.jar:5.3.31]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.83.jar:9.0.83]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.83.jar:9.0.83]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-5.3.31.jar:5.3.31]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.31.jar:5.3.31]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178) ~[tomcat-embed-core-9.0.83.jar:9.0.83]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153) ~[tomcat-embed-core-9.0.83.jar:9.0.83]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168) ~[tomcat-embed-core-9.0.83.jar:9.0.83]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-9.0.83.jar:9.0.83]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481) ~[tomcat-embed-core-9.0.83.jar:9.0.83]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130) ~[tomcat-embed-core-9.0.83.jar:9.0.83]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-9.0.83.jar:9.0.83]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-9.0.83.jar:9.0.83]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342) ~[tomcat-embed-core-9.0.83.jar:9.0.83]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390) ~[tomcat-embed-core-9.0.83.jar:9.0.83]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-9.0.83.jar:9.0.83]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928) ~[tomcat-embed-core-9.0.83.jar:9.0.83]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794) ~[tomcat-embed-core-9.0.83.jar:9.0.83]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52) ~[tomcat-embed-core-9.0.83.jar:9.0.83]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191) ~[tomcat-embed-core-9.0.83.jar:9.0.83]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) ~[tomcat-embed-core-9.0.83.jar:9.0.83]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) ~[tomcat-embed-core-9.0.83.jar:9.0.83]
	at java.lang.Thread.run(Thread.java:1575) ~[?:?]
Caused by: io.lettuce.core.RedisException: java.net.SocketException: Connection reset
	at io.lettuce.core.internal.Exceptions.bubble(Exceptions.java:83) ~[lettuce-core-6.1.10.RELEASE.jar:6.1.10.RELEASE]
	at io.lettuce.core.internal.Futures.awaitOrCancel(Futures.java:250) ~[lettuce-core-6.1.10.RELEASE.jar:6.1.10.RELEASE]
	at io.lettuce.core.LettuceFutures.awaitOrCancel(LettuceFutures.java:74) ~[lettuce-core-6.1.10.RELEASE.jar:6.1.10.RELEASE]
	at org.springframework.data.redis.connection.lettuce.LettuceConnection.await(LettuceConnection.java:1083) ~[spring-data-redis-2.7.18.jar:2.7.18]
	... 75 more
Caused by: java.net.SocketException: Connection reset
	at sun.nio.ch.SocketChannelImpl.throwConnectionReset(SocketChannelImpl.java:403) ~[?:?]
	at sun.nio.ch.SocketChannelImpl.implRead(SocketChannelImpl.java:435) ~[?:?]
	at sun.nio.ch.SocketChannelImpl.read(SocketChannelImpl.java:493) ~[?:?]
	at io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:254) ~[netty-buffer-4.1.101.Final.jar:4.1.101.Final]
	at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1132) ~[netty-buffer-4.1.101.Final.jar:4.1.101.Final]
	at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:357) ~[netty-transport-4.1.101.Final.jar:4.1.101.Final]
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:151) ~[netty-transport-4.1.101.Final.jar:4.1.101.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788) ~[netty-transport-4.1.101.Final.jar:4.1.101.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724) ~[netty-transport-4.1.101.Final.jar:4.1.101.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650) ~[netty-transport-4.1.101.Final.jar:4.1.101.Final]
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562) ~[netty-transport-4.1.101.Final.jar:4.1.101.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997) ~[netty-common-4.1.101.Final.jar:4.1.101.Final]
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74) ~[netty-common-4.1.101.Final.jar:4.1.101.Final]
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30) ~[netty-common-4.1.101.Final.jar:4.1.101.Final]
	... 1 more
2025-04-08 18:20:23 [lettuce-eventExecutorLoop-1-6] INFO  io.lettuce.core.protocol.ConnectionWatchdog - Reconnecting, last destination was valkey-adea82e-pranavprem16131-f50a.h.aivencloud.com/134.209.158.147:24941
2025-04-08 18:20:23 [http-nio-8081-exec-9] WARN  org.apache.catalina.util.SessionIdGeneratorBase - Creation of SecureRandom instance for session ID generation using [SHA1PRNG] took [147] milliseconds.
2025-04-08 18:20:23 [lettuce-nioEventLoop-4-3] INFO  io.lettuce.core.protocol.ReconnectionHandler - Reconnected to valkey-adea82e-pranavprem16131-f50a.h.aivencloud.com/<unresolved>:24941
2025-04-08 18:20:50 [HikariPool-1 housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=5m27s372ms793µs900ns).
2025-04-08 18:31:44 [SpringApplicationShutdownHook] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-04-08 18:31:45 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-04-08 18:31:45 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
